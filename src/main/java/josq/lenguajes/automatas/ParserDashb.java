
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package josq.lenguajes.automatas;

import java.util.List;
import java.util.ArrayList;
import josq.lenguajes.modelos.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserDashb extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserDashbSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserDashb() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserDashb(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserDashb(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\342\000\002\002\004\000\002\002\005\000\002\003" +
    "\003\000\002\003\004\000\002\003\005\000\002\003\004" +
    "\000\002\003\005\000\002\004\003\000\002\004\005\000" +
    "\002\005\003\000\002\005\005\000\002\007\003\000\002" +
    "\007\004\000\002\007\004\000\002\007\005\000\002\006" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\004\000\002\006\004\000\002" +
    "\006\004\000\002\006\004\000\002\012\003\000\002\012" +
    "\004\000\002\011\003\000\002\011\003\000\002\011\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\011\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\011\005\000\002\013\005\000\002\015" +
    "\006\000\002\016\003\000\002\016\004\000\002\017\004" +
    "\000\002\017\005\000\002\014\007\000\002\014\007\000" +
    "\002\020\007\000\002\020\007\000\002\022\006\000\002" +
    "\023\003\000\002\023\004\000\002\024\004\000\002\024" +
    "\005\000\002\021\011\000\002\021\011\000\002\021\011" +
    "\000\002\021\011\000\002\021\011\000\002\021\011\000" +
    "\002\025\005\000\002\027\006\000\002\030\003\000\002" +
    "\030\004\000\002\031\004\000\002\031\005\000\002\026" +
    "\007\000\002\026\007\000\002\032\007\000\002\032\007" +
    "\000\002\034\006\000\002\035\003\000\002\035\004\000" +
    "\002\036\004\000\002\036\005\000\002\033\011\000\002" +
    "\033\011\000\002\033\011\000\002\033\011\000\002\033" +
    "\011\000\002\033\011\000\002\041\005\000\002\043\006" +
    "\000\002\044\003\000\002\044\004\000\002\045\004\000" +
    "\002\045\005\000\002\042\007\000\002\042\007\000\002" +
    "\046\007\000\002\046\007\000\002\050\006\000\002\051" +
    "\003\000\002\051\004\000\002\052\004\000\002\052\005" +
    "\000\002\047\013\000\002\047\013\000\002\047\013\000" +
    "\002\047\013\000\002\047\013\000\002\047\013\000\002" +
    "\047\013\000\002\047\013\000\002\047\013\000\002\047" +
    "\013\000\002\047\013\000\002\047\013\000\002\047\013" +
    "\000\002\047\013\000\002\047\013\000\002\047\013\000" +
    "\002\047\013\000\002\047\013\000\002\047\013\000\002" +
    "\047\013\000\002\047\013\000\002\047\013\000\002\047" +
    "\013\000\002\047\013\000\002\053\007\000\002\053\007" +
    "\000\002\055\006\000\002\056\003\000\002\056\004\000" +
    "\002\057\004\000\002\057\005\000\002\054\007\000\002" +
    "\054\007\000\002\060\007\000\002\060\007\000\002\062" +
    "\006\000\002\063\003\000\002\063\004\000\002\064\004" +
    "\000\002\064\005\000\002\061\013\000\002\061\013\000" +
    "\002\061\013\000\002\061\013\000\002\061\013\000\002" +
    "\061\013\000\002\061\013\000\002\061\013\000\002\061" +
    "\013\000\002\061\013\000\002\061\013\000\002\061\013" +
    "\000\002\061\013\000\002\061\013\000\002\061\013\000" +
    "\002\061\013\000\002\061\013\000\002\061\013\000\002" +
    "\061\013\000\002\061\013\000\002\061\013\000\002\061" +
    "\013\000\002\061\013\000\002\061\013\000\002\065\010" +
    "\000\002\066\007\000\002\066\007\000\002\066\007\000" +
    "\002\066\007\000\002\066\007\000\002\066\007\000\002" +
    "\067\010\000\002\070\015\000\002\104\004\000\002\105" +
    "\004\000\002\106\006\000\002\107\006\000\002\110\004" +
    "\000\002\111\004\000\002\112\004\000\002\113\004\000" +
    "\002\114\004\000\002\117\004\000\002\131\004\000\002" +
    "\123\004\000\002\125\004\000\002\126\004\000\002\127" +
    "\004\000\002\130\004\000\002\115\004\000\002\116\004" +
    "\000\002\120\004\000\002\121\004\000\002\122\004\000" +
    "\002\124\004\000\002\040\012\000\002\040\012\000\002" +
    "\040\012\000\002\040\012\000\002\040\012\000\002\040" +
    "\012\000\002\037\010\000\002\037\010\000\002\071\006" +
    "\000\002\072\002\000\002\072\003\000\002\072\004\000" +
    "\002\072\004\000\002\073\004\000\002\073\005\000\002" +
    "\073\005\000\002\075\006\000\002\076\003\000\002\076" +
    "\004\000\002\077\004\000\002\077\005\000\002\074\007" +
    "\000\002\074\007\000\002\101\006\000\002\102\003\000" +
    "\002\102\004\000\002\103\004\000\002\103\005\000\002" +
    "\100\011\000\002\100\011\000\002\100\011\000\002\100" +
    "\011\000\002\100\011\000\002\100\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02e7\000\004\010\005\001\002\000\004\002\u02e9\001" +
    "\002\000\026\003\033\010\044\020\015\021\023\023\041" +
    "\024\014\025\016\041\013\042\007\043\036\001\002\000" +
    "\030\003\uffdd\010\uffdd\011\uffdd\020\uffdd\021\uffdd\023\uffdd" +
    "\024\uffdd\025\uffdd\041\uffdd\042\uffdd\043\uffdd\001\002\000" +
    "\004\010\u02e4\001\002\000\030\003\uffdb\010\uffdb\011\uffdb" +
    "\020\uffdb\021\uffdb\023\uffdb\024\uffdb\025\uffdb\041\uffdb\042" +
    "\uffdb\043\uffdb\001\002\000\032\003\uffeb\010\uffeb\011\uffeb" +
    "\014\uffeb\020\uffeb\021\uffeb\023\uffeb\024\uffeb\025\uffeb\041" +
    "\uffeb\042\uffeb\043\uffeb\001\002\000\030\003\uffe1\010\uffe1" +
    "\011\uffe1\020\uffe1\021\uffe1\023\uffe1\024\uffe1\025\uffe1\041" +
    "\uffe1\042\uffe1\043\uffe1\001\002\000\004\010\u02e1\001\002" +
    "\000\004\004\u02e0\001\002\000\004\004\u02df\001\002\000" +
    "\004\004\u02de\001\002\000\030\003\uffe6\010\uffe6\011\uffe6" +
    "\020\uffe6\021\uffe6\023\uffe6\024\uffe6\025\uffe6\041\uffe6\042" +
    "\uffe6\043\uffe6\001\002\000\032\003\ufff6\010\ufff6\011\ufff6" +
    "\014\u02dd\020\ufff6\021\ufff6\023\ufff6\024\ufff6\025\ufff6\041" +
    "\ufff6\042\ufff6\043\ufff6\001\002\000\030\003\033\010\044" +
    "\011\uffff\020\015\021\023\023\041\024\014\025\016\041" +
    "\013\042\007\043\036\001\002\000\032\003\uffed\010\uffed" +
    "\011\uffed\014\uffed\020\uffed\021\uffed\023\uffed\024\uffed\025" +
    "\uffed\041\uffed\042\uffed\043\uffed\001\002\000\004\004\u02d8" +
    "\001\002\000\032\003\ufff0\010\ufff0\011\ufff0\014\ufff0\020" +
    "\ufff0\021\ufff0\023\ufff0\024\ufff0\025\ufff0\041\ufff0\042\ufff0" +
    "\043\ufff0\001\002\000\030\003\uffe4\010\uffe4\011\uffe4\020" +
    "\uffe4\021\uffe4\023\uffe4\024\uffe4\025\uffe4\041\uffe4\042\uffe4" +
    "\043\uffe4\001\002\000\030\003\uffe3\010\uffe3\011\uffe3\020" +
    "\uffe3\021\uffe3\023\uffe3\024\uffe3\025\uffe3\041\uffe3\042\uffe3" +
    "\043\uffe3\001\002\000\026\003\033\010\044\020\015\021" +
    "\023\023\041\024\014\025\016\041\013\042\007\043\036" +
    "\001\002\000\030\003\uffdf\010\uffdf\011\uffdf\020\uffdf\021" +
    "\uffdf\023\uffdf\024\uffdf\025\uffdf\041\uffdf\042\uffdf\043\uffdf" +
    "\001\002\000\032\003\uffec\010\uffec\011\uffec\014\uffec\020" +
    "\uffec\021\uffec\023\uffec\024\uffec\025\uffec\041\uffec\042\uffec" +
    "\043\uffec\001\002\000\032\003\uffee\010\uffee\011\uffee\014" +
    "\uffee\020\uffee\021\uffee\023\uffee\024\uffee\025\uffee\041\uffee" +
    "\042\uffee\043\uffee\001\002\000\012\004\u02ce\007\u02d0\011" +
    "\u02cd\013\u02cf\001\002\000\004\011\u02cc\001\002\000\032" +
    "\003\ufff1\010\ufff1\011\ufff1\014\ufff1\020\ufff1\021\ufff1\023" +
    "\ufff1\024\ufff1\025\ufff1\041\ufff1\042\ufff1\043\ufff1\001\002" +
    "\000\004\012\u02c2\001\002\000\032\003\uffef\010\uffef\011" +
    "\uffef\014\uffef\020\uffef\021\uffef\023\uffef\024\uffef\025\uffef" +
    "\041\uffef\042\uffef\043\uffef\001\002\000\030\003\uffdc\010" +
    "\uffdc\011\uffdc\020\uffdc\021\uffdc\023\uffdc\024\uffdc\025\uffdc" +
    "\041\uffdc\042\uffdc\043\uffdc\001\002\000\004\007\u02c1\001" +
    "\002\000\030\003\uffe0\010\uffe0\011\uffe0\020\uffe0\021\uffe0" +
    "\023\uffe0\024\uffe0\025\uffe0\041\uffe0\042\uffe0\043\uffe0\001" +
    "\002\000\030\003\uffde\010\uffde\011\uffde\020\uffde\021\uffde" +
    "\023\uffde\024\uffde\025\uffde\041\uffde\042\uffde\043\uffde\001" +
    "\002\000\010\003\057\015\054\016\063\001\002\000\030" +
    "\003\uffe2\010\uffe2\011\uffe2\020\uffe2\021\uffe2\023\uffe2\024" +
    "\uffe2\025\uffe2\041\uffe2\042\uffe2\043\uffe2\001\002\000\032" +
    "\003\ufff2\010\ufff2\011\ufff2\014\ufff2\020\ufff2\021\ufff2\023" +
    "\ufff2\024\ufff2\025\ufff2\041\ufff2\042\ufff2\043\ufff2\001\002" +
    "\000\004\014\u02be\001\002\000\004\014\u02b9\001\002\000" +
    "\004\011\u02b8\001\002\000\004\014\u02b1\001\002\000\004" +
    "\014\u02ae\001\002\000\006\010\u0218\012\u0217\001\002\000" +
    "\004\011\u0216\001\002\000\004\014\153\001\002\000\004" +
    "\011\152\001\002\000\004\014\147\001\002\000\004\011" +
    "\146\001\002\000\004\014\137\001\002\000\004\010\064" +
    "\001\002\000\012\020\015\033\072\034\070\035\071\001" +
    "\002\000\004\014\126\001\002\000\004\014\115\001\002" +
    "\000\004\014\112\001\002\000\004\004\111\001\002\000" +
    "\004\004\110\001\002\000\004\004\107\001\002\000\004" +
    "\014\074\001\002\000\010\033\072\034\070\035\071\001" +
    "\002\000\004\014\104\001\002\000\004\014\101\001\002" +
    "\000\004\011\100\001\002\000\006\011\uff3b\014\uff3b\001" +
    "\002\000\004\034\070\001\002\000\004\011\103\001\002" +
    "\000\006\011\uff41\014\uff41\001\002\000\004\033\072\001" +
    "\002\000\004\011\106\001\002\000\006\011\uff40\014\uff40" +
    "\001\002\000\006\011\uff47\014\uff47\001\002\000\006\011" +
    "\uff45\014\uff45\001\002\000\006\011\uff46\014\uff46\001\002" +
    "\000\004\020\015\001\002\000\004\011\114\001\002\000" +
    "\006\011\uff3a\014\uff3a\001\002\000\006\020\015\034\070" +
    "\001\002\000\004\014\123\001\002\000\004\014\120\001" +
    "\002\000\004\034\070\001\002\000\004\011\122\001\002" +
    "\000\006\011\uff3f\014\uff3f\001\002\000\004\020\015\001" +
    "\002\000\004\011\125\001\002\000\006\011\uff3e\014\uff3e" +
    "\001\002\000\006\020\015\033\072\001\002\000\004\014" +
    "\134\001\002\000\004\014\131\001\002\000\004\033\072" +
    "\001\002\000\004\011\133\001\002\000\006\011\uff3c\014" +
    "\uff3c\001\002\000\004\020\015\001\002\000\004\011\136" +
    "\001\002\000\006\011\uff3d\014\uff3d\001\002\000\004\016" +
    "\141\001\002\000\004\011\145\001\002\000\004\010\142" +
    "\001\002\000\010\020\015\033\072\034\070\001\002\000" +
    "\004\014\144\001\002\000\006\033\072\034\070\001\002" +
    "\000\030\003\uffa7\010\uffa7\011\uffa7\020\uffa7\021\uffa7\023" +
    "\uffa7\024\uffa7\025\uffa7\041\uffa7\042\uffa7\043\uffa7\001\002" +
    "\000\030\003\uffaf\010\uffaf\011\uffaf\020\uffaf\021\uffaf\023" +
    "\uffaf\024\uffaf\025\uffaf\041\uffaf\042\uffaf\043\uffaf\001\002" +
    "\000\004\016\141\001\002\000\004\011\151\001\002\000" +
    "\030\003\uff7f\010\uff7f\011\uff7f\020\uff7f\021\uff7f\023\uff7f" +
    "\024\uff7f\025\uff7f\041\uff7f\042\uff7f\043\uff7f\001\002\000" +
    "\030\003\uffda\010\uffda\011\uffda\020\uffda\021\uffda\023\uffda" +
    "\024\uffda\025\uffda\041\uffda\042\uffda\043\uffda\001\002\000" +
    "\004\015\154\001\002\000\004\012\165\001\002\000\004" +
    "\011\164\001\002\000\004\011\163\001\002\000\004\011" +
    "\162\001\002\000\004\011\161\001\002\000\030\003\uffa6" +
    "\010\uffa6\011\uffa6\020\uffa6\021\uffa6\023\uffa6\024\uffa6\025" +
    "\uffa6\041\uffa6\042\uffa6\043\uffa6\001\002\000\030\003\uffd0" +
    "\010\uffd0\011\uffd0\020\uffd0\021\uffd0\023\uffd0\024\uffd0\025" +
    "\uffd0\041\uffd0\042\uffd0\043\uffd0\001\002\000\030\003\uff7e" +
    "\010\uff7e\011\uff7e\020\uff7e\021\uff7e\023\uff7e\024\uff7e\025" +
    "\uff7e\041\uff7e\042\uff7e\043\uff7e\001\002\000\030\003\uff87" +
    "\010\uff87\011\uff87\020\uff87\021\uff87\023\uff87\024\uff87\025" +
    "\uff87\041\uff87\042\uff87\043\uff87\001\002\000\004\010\173" +
    "\001\002\000\004\010\u0211\001\002\000\004\010\u020d\001" +
    "\002\000\004\013\u020b\001\002\000\006\013\uffce\014\u020a" +
    "\001\002\000\006\013\uffa4\014\u0209\001\002\000\024\026" +
    "\u015c\027\u0165\030\214\036\225\037\232\040\u0164\044\u0162" +
    "\045\213\046\215\001\002\000\004\013\u015b\001\002\000" +
    "\004\010\u013f\001\002\000\006\013\uff85\014\u013d\001\002" +
    "\000\004\013\u013c\001\002\000\004\013\u013b\001\002\000" +
    "\004\010\204\001\002\000\006\013\uff7c\014\203\001\002" +
    "\000\004\010\uff7a\001\002\000\012\030\214\044\216\045" +
    "\213\046\215\001\002\000\006\013\uff7b\014\206\001\002" +
    "\000\004\010\uff79\001\002\000\004\014\u011c\001\002\000" +
    "\004\014\375\001\002\000\004\014\336\001\002\000\004" +
    "\014\277\001\002\000\004\004\276\001\002\000\004\007" +
    "\275\001\002\000\004\004\274\001\002\000\004\012\217" +
    "\001\002\000\004\010\222\001\002\000\004\010\222\001" +
    "\002\000\004\013\271\001\002\000\010\017\231\036\225" +
    "\037\232\001\002\000\006\013\uff29\014\224\001\002\000" +
    "\004\010\uff27\001\002\000\004\006\270\001\002\000\004" +
    "\014\257\001\002\000\004\014\246\001\002\000\004\014" +
    "\235\001\002\000\004\004\234\001\002\000\004\006\233" +
    "\001\002\000\006\011\uff43\014\uff43\001\002\000\006\011" +
    "\uff4b\014\uff4b\001\002\000\006\017\231\037\232\001\002" +
    "\000\004\014\243\001\002\000\004\014\240\001\002\000" +
    "\004\017\231\001\002\000\004\011\242\001\002\000\006" +
    "\013\uff25\014\uff25\001\002\000\004\037\232\001\002\000" +
    "\004\011\245\001\002\000\006\013\uff24\014\uff24\001\002" +
    "\000\006\017\231\036\225\001\002\000\004\014\254\001" +
    "\002\000\004\014\251\001\002\000\004\017\231\001\002" +
    "\000\004\011\253\001\002\000\006\013\uff23\014\uff23\001" +
    "\002\000\004\036\225\001\002\000\004\011\256\001\002" +
    "\000\006\013\uff22\014\uff22\001\002\000\006\036\225\037" +
    "\232\001\002\000\004\014\265\001\002\000\004\014\262" +
    "\001\002\000\004\037\232\001\002\000\004\011\264\001" +
    "\002\000\006\013\uff20\014\uff20\001\002\000\004\036\225" +
    "\001\002\000\004\011\267\001\002\000\006\013\uff21\014" +
    "\uff21\001\002\000\006\011\uff44\014\uff44\001\002\000\006" +
    "\011\uff2a\014\uff2a\001\002\000\006\013\uff28\014\273\001" +
    "\002\000\004\010\uff26\001\002\000\006\011\uff4c\014\uff4c" +
    "\001\002\000\006\011\uff4e\014\uff4e\001\002\000\006\011" +
    "\uff4d\014\uff4d\001\002\000\010\030\214\044\216\045\213" +
    "\001\002\000\004\014\325\001\002\000\004\014\314\001" +
    "\002\000\004\014\303\001\002\000\006\030\214\045\213" +
    "\001\002\000\004\014\311\001\002\000\004\014\306\001" +
    "\002\000\004\045\213\001\002\000\004\011\310\001\002" +
    "\000\006\013\uff78\014\uff78\001\002\000\004\030\214\001" +
    "\002\000\004\011\313\001\002\000\006\013\uff77\014\uff77" +
    "\001\002\000\006\044\216\045\213\001\002\000\004\014" +
    "\322\001\002\000\004\014\317\001\002\000\004\045\213" +
    "\001\002\000\004\011\321\001\002\000\006\013\uff76\014" +
    "\uff76\001\002\000\004\044\216\001\002\000\004\011\324" +
    "\001\002\000\006\013\uff75\014\uff75\001\002\000\006\030" +
    "\214\044\216\001\002\000\004\014\333\001\002\000\004" +
    "\014\330\001\002\000\004\030\214\001\002\000\004\011" +
    "\332\001\002\000\006\013\uff73\014\uff73\001\002\000\004" +
    "\044\216\001\002\000\004\011\335\001\002\000\006\013" +
    "\uff74\014\uff74\001\002\000\010\030\214\045\213\046\215" +
    "\001\002\000\004\014\364\001\002\000\004\014\353\001" +
    "\002\000\004\014\342\001\002\000\006\030\214\045\213" +
    "\001\002\000\004\014\350\001\002\000\004\014\345\001" +
    "\002\000\004\045\213\001\002\000\004\011\347\001\002" +
    "\000\006\013\uff72\014\uff72\001\002\000\004\030\214\001" +
    "\002\000\004\011\352\001\002\000\006\013\uff71\014\uff71" +
    "\001\002\000\006\045\213\046\215\001\002\000\004\014" +
    "\361\001\002\000\004\014\356\001\002\000\004\045\213" +
    "\001\002\000\004\011\360\001\002\000\006\013\uff70\014" +
    "\uff70\001\002\000\004\046\215\001\002\000\004\011\363" +
    "\001\002\000\006\013\uff6f\014\uff6f\001\002\000\006\030" +
    "\214\046\215\001\002\000\004\014\372\001\002\000\004" +
    "\014\367\001\002\000\004\030\214\001\002\000\004\011" +
    "\371\001\002\000\006\013\uff6d\014\uff6d\001\002\000\004" +
    "\046\215\001\002\000\004\011\374\001\002\000\006\013" +
    "\uff6e\014\uff6e\001\002\000\010\044\216\045\213\046\215" +
    "\001\002\000\004\014\u0113\001\002\000\004\014\u010a\001" +
    "\002\000\004\014\u0101\001\002\000\006\045\213\046\215" +
    "\001\002\000\004\014\u0107\001\002\000\004\014\u0104\001" +
    "\002\000\004\045\213\001\002\000\004\011\u0106\001\002" +
    "\000\006\013\uff6c\014\uff6c\001\002\000\004\046\215\001" +
    "\002\000\004\011\u0109\001\002\000\006\013\uff6b\014\uff6b" +
    "\001\002\000\006\044\216\045\213\001\002\000\004\014" +
    "\u0110\001\002\000\004\014\u010d\001\002\000\004\045\213" +
    "\001\002\000\004\011\u010f\001\002\000\006\013\uff6a\014" +
    "\uff6a\001\002\000\004\044\216\001\002\000\004\011\u0112" +
    "\001\002\000\006\013\uff69\014\uff69\001\002\000\006\044" +
    "\216\046\215\001\002\000\004\014\u0119\001\002\000\004" +
    "\014\u0116\001\002\000\004\046\215\001\002\000\004\011" +
    "\u0118\001\002\000\006\013\uff67\014\uff67\001\002\000\004" +
    "\044\216\001\002\000\004\011\u011b\001\002\000\006\013" +
    "\uff68\014\uff68\001\002\000\010\030\214\044\216\046\215" +
    "\001\002\000\004\014\u0132\001\002\000\004\014\u0129\001" +
    "\002\000\004\014\u0120\001\002\000\006\030\214\044\216" +
    "\001\002\000\004\014\u0126\001\002\000\004\014\u0123\001" +
    "\002\000\004\030\214\001\002\000\004\011\u0125\001\002" +
    "\000\006\013\uff61\014\uff61\001\002\000\004\044\216\001" +
    "\002\000\004\011\u0128\001\002\000\006\013\uff62\014\uff62" +
    "\001\002\000\006\030\214\046\215\001\002\000\004\014" +
    "\u012f\001\002\000\004\014\u012c\001\002\000\004\030\214" +
    "\001\002\000\004\011\u012e\001\002\000\006\013\uff65\014" +
    "\uff65\001\002\000\004\046\215\001\002\000\004\011\u0131" +
    "\001\002\000\006\013\uff66\014\uff66\001\002\000\006\044" +
    "\216\046\215\001\002\000\004\014\u0138\001\002\000\004" +
    "\014\u0135\001\002\000\004\044\216\001\002\000\004\011" +
    "\u0137\001\002\000\006\013\uff63\014\uff63\001\002\000\004" +
    "\046\215\001\002\000\004\011\u013a\001\002\000\006\013" +
    "\uff64\014\uff64\001\002\000\006\011\uffcf\014\uffcf\001\002" +
    "\000\006\011\uff7d\014\uff7d\001\002\000\004\010\uff83\001" +
    "\002\000\006\013\uff84\014\u015a\001\002\000\006\044\u0142" +
    "\046\215\001\002\000\004\014\u0157\001\002\000\004\014" +
    "\u0154\001\002\000\004\012\u0143\001\002\000\004\010\u0146" +
    "\001\002\000\004\013\u0153\001\002\000\004\010\u0146\001" +
    "\002\000\006\036\225\037\232\001\002\000\006\013\uff30" +
    "\014\u0148\001\002\000\004\010\uff2e\001\002\000\004\014" +
    "\u014e\001\002\000\004\014\u014b\001\002\000\004\037\232" +
    "\001\002\000\004\011\u014d\001\002\000\006\013\uff2c\014" +
    "\uff2c\001\002\000\004\036\225\001\002\000\004\011\u0150" +
    "\001\002\000\006\013\uff2b\014\uff2b\001\002\000\006\013" +
    "\uff2f\014\u0152\001\002\000\004\010\uff2d\001\002\000\006" +
    "\011\uff31\014\uff31\001\002\000\004\046\215\001\002\000" +
    "\004\011\u0156\001\002\000\006\013\uff80\014\uff80\001\002" +
    "\000\004\044\u0142\001\002\000\004\011\u0159\001\002\000" +
    "\006\013\uff81\014\uff81\001\002\000\004\010\uff82\001\002" +
    "\000\006\011\uff86\014\uff86\001\002\000\004\004\u0208\001" +
    "\002\000\004\014\u01e9\001\002\000\004\014\u01e0\001\002" +
    "\000\004\014\u01c1\001\002\000\004\014\u01b8\001\002\000" +
    "\004\014\u0191\001\002\000\004\012\u0189\001\002\000\004" +
    "\014\u016a\001\002\000\004\006\u0169\001\002\000\004\006" +
    "\u0168\001\002\000\004\014\u0167\001\002\000\010\030\214" +
    "\044\u0162\045\213\001\002\000\006\011\uff4f\014\uff4f\001" +
    "\002\000\006\011\uff42\014\uff42\001\002\000\010\030\214" +
    "\036\225\040\u0164\001\002\000\004\014\u0180\001\002\000" +
    "\004\014\u0177\001\002\000\004\014\u016e\001\002\000\006" +
    "\030\214\040\u0164\001\002\000\004\014\u0174\001\002\000" +
    "\004\014\u0171\001\002\000\004\030\214\001\002\000\004" +
    "\011\u0173\001\002\000\006\013\uff9a\014\uff9a\001\002\000" +
    "\004\040\u0164\001\002\000\004\011\u0176\001\002\000\006" +
    "\013\uff99\014\uff99\001\002\000\006\030\214\036\225\001" +
    "\002\000\004\014\u017d\001\002\000\004\014\u017a\001\002" +
    "\000\004\030\214\001\002\000\004\011\u017c\001\002\000" +
    "\006\013\uff98\014\uff98\001\002\000\004\036\225\001\002" +
    "\000\004\011\u017f\001\002\000\006\013\uff97\014\uff97\001" +
    "\002\000\006\036\225\040\u0164\001\002\000\004\014\u0186" +
    "\001\002\000\004\014\u0183\001\002\000\004\040\u0164\001" +
    "\002\000\004\011\u0185\001\002\000\006\013\uff95\014\uff95" +
    "\001\002\000\004\036\225\001\002\000\004\011\u0188\001" +
    "\002\000\006\013\uff96\014\uff96\001\002\000\004\010\u018a" +
    "\001\002\000\010\017\231\036\225\037\232\001\002\000" +
    "\004\014\u018f\001\002\000\004\014\u018d\001\002\000\006" +
    "\017\231\037\232\001\002\000\006\011\u014d\014\240\001" +
    "\002\000\006\017\231\036\225\001\002\000\006\011\u0150" +
    "\014\251\001\002\000\022\026\u015c\027\u0165\036\225\037" +
    "\232\040\u0164\044\216\045\213\046\215\001\002\000\004" +
    "\014\u01b5\001\002\000\004\014\u01ac\001\002\000\004\014" +
    "\u01a3\001\002\000\004\014\u01a0\001\002\000\004\014\u0197" +
    "\001\002\000\006\036\225\037\232\001\002\000\004\014" +
    "\u019d\001\002\000\004\014\u019a\001\002\000\004\037\232" +
    "\001\002\000\004\011\u019c\001\002\000\006\013\uff8b\014" +
    "\uff8b\001\002\000\004\036\225\001\002\000\004\011\u019f" +
    "\001\002\000\006\013\uff8c\014\uff8c\001\002\000\004\026" +
    "\u015c\001\002\000\004\011\u01a2\001\002\000\006\013\uffc6" +
    "\014\uffc6\001\002\000\006\036\225\040\u0164\001\002\000" +
    "\004\014\u01a9\001\002\000\004\014\u01a6\001\002\000\004" +
    "\040\u0164\001\002\000\004\011\u01a8\001\002\000\006\013" +
    "\uff8d\014\uff8d\001\002\000\004\036\225\001\002\000\004" +
    "\011\u01ab\001\002\000\006\013\uff8e\014\uff8e\001\002\000" +
    "\006\037\232\040\u0164\001\002\000\004\014\u01b2\001\002" +
    "\000\004\014\u01af\001\002\000\004\037\232\001\002\000" +
    "\004\011\u01b1\001\002\000\006\013\uff8a\014\uff8a\001\002" +
    "\000\004\040\u0164\001\002\000\004\011\u01b4\001\002\000" +
    "\006\013\uff89\014\uff89\001\002\000\004\027\u0165\001\002" +
    "\000\004\011\u01b7\001\002\000\006\013\uffc5\014\uffc5\001" +
    "\002\000\006\027\u0165\030\214\001\002\000\004\014\u01be" +
    "\001\002\000\004\014\u01bb\001\002\000\004\030\214\001" +
    "\002\000\004\011\u01bd\001\002\000\006\013\uffca\014\uffca" +
    "\001\002\000\004\027\u0165\001\002\000\004\011\u01c0\001" +
    "\002\000\006\013\uffc9\014\uffc9\001\002\000\010\030\214" +
    "\037\232\040\u0164\001\002\000\004\014\u01d7\001\002\000" +
    "\004\014\u01ce\001\002\000\004\014\u01c5\001\002\000\006" +
    "\030\214\037\232\001\002\000\004\014\u01cb\001\002\000" +
    "\004\014\u01c8\001\002\000\004\030\214\001\002\000\004" +
    "\011\u01ca\001\002\000\006\013\uff9e\014\uff9e\001\002\000" +
    "\004\037\232\001\002\000\004\011\u01cd\001\002\000\006" +
    "\013\uff9d\014\uff9d\001\002\000\006\030\214\040\u0164\001" +
    "\002\000\004\014\u01d4\001\002\000\004\014\u01d1\001\002" +
    "\000\004\030\214\001\002\000\004\011\u01d3\001\002\000" +
    "\006\013\uffa0\014\uffa0\001\002\000\004\040\u0164\001\002" +
    "\000\004\011\u01d6\001\002\000\006\013\uff9f\014\uff9f\001" +
    "\002\000\006\037\232\040\u0164\001\002\000\004\014\u01dd" +
    "\001\002\000\004\014\u01da\001\002\000\004\040\u0164\001" +
    "\002\000\004\011\u01dc\001\002\000\006\013\uff9b\014\uff9b" +
    "\001\002\000\004\037\232\001\002\000\004\011\u01df\001" +
    "\002\000\006\013\uff9c\014\uff9c\001\002\000\006\026\u015c" +
    "\030\214\001\002\000\004\014\u01e6\001\002\000\004\014" +
    "\u01e3\001\002\000\004\030\214\001\002\000\004\011\u01e5" +
    "\001\002\000\006\013\uffc8\014\uffc8\001\002\000\004\026" +
    "\u015c\001\002\000\004\011\u01e8\001\002\000\006\013\uffc7" +
    "\014\uffc7\001\002\000\010\030\214\036\225\037\232\001" +
    "\002\000\004\014\u01ff\001\002\000\004\014\u01f6\001\002" +
    "\000\004\014\u01ed\001\002\000\006\030\214\037\232\001" +
    "\002\000\004\014\u01f3\001\002\000\004\014\u01f0\001\002" +
    "\000\004\030\214\001\002\000\004\011\u01f2\001\002\000" +
    "\006\013\uff92\014\uff92\001\002\000\004\037\232\001\002" +
    "\000\004\011\u01f5\001\002\000\006\013\uff91\014\uff91\001" +
    "\002\000\006\030\214\036\225\001\002\000\004\014\u01fc" +
    "\001\002\000\004\014\u01f9\001\002\000\004\030\214\001" +
    "\002\000\004\011\u01fb\001\002\000\006\013\uff94\014\uff94" +
    "\001\002\000\004\036\225\001\002\000\004\011\u01fe\001" +
    "\002\000\006\013\uff93\014\uff93\001\002\000\006\036\225" +
    "\037\232\001\002\000\004\014\u0205\001\002\000\004\014" +
    "\u0202\001\002\000\004\037\232\001\002\000\004\011\u0204" +
    "\001\002\000\006\013\uff90\014\uff90\001\002\000\004\036" +
    "\225\001\002\000\004\011\u0207\001\002\000\006\013\uff8f" +
    "\014\uff8f\001\002\000\006\011\uff50\014\uff50\001\002\000" +
    "\004\010\uffa2\001\002\000\004\010\uffcc\001\002\000\006" +
    "\011\uffa5\014\uffa5\001\002\000\006\013\uffa3\014\u0210\001" +
    "\002\000\012\030\214\036\225\037\232\040\u0164\001\002" +
    "\000\004\014\u020f\001\002\000\010\036\225\037\232\040" +
    "\u0164\001\002\000\004\010\uffa1\001\002\000\010\026\u015c" +
    "\027\u0165\030\214\001\002\000\006\013\uffcd\014\u0213\001" +
    "\002\000\004\010\uffcb\001\002\000\004\014\u0215\001\002" +
    "\000\006\026\u015c\027\u0165\001\002\000\030\003\uffc4\010" +
    "\uffc4\011\uffc4\020\uffc4\021\uffc4\023\uffc4\024\uffc4\025\uffc4" +
    "\041\uffc4\042\uffc4\043\uffc4\001\002\000\004\010\u024d\001" +
    "\002\000\010\017\231\021\023\027\u0165\001\002\000\004" +
    "\011\u023f\001\002\000\004\014\u0238\001\002\000\004\011" +
    "\u0236\001\002\000\004\014\u022f\001\002\000\004\014\u021e" +
    "\001\002\000\006\017\231\021\023\001\002\000\004\014" +
    "\u0223\001\002\000\004\014\u0221\001\002\000\004\017\231" +
    "\001\002\000\004\011\uff5e\001\002\000\004\021\023\001" +
    "\002\000\006\011\uff5f\014\u0225\001\002\000\004\031\u0227" +
    "\001\002\000\004\014\u0229\001\002\000\004\004\u0228\001" +
    "\002\000\004\014\uff4a\001\002\000\004\030\214\001\002" +
    "\000\004\014\u022b\001\002\000\004\032\u022d\001\002\000" +
    "\004\011\uff58\001\002\000\004\005\u022e\001\002\000\004" +
    "\011\uff49\001\002\000\006\017\231\027\u0165\001\002\000" +
    "\004\014\u0234\001\002\000\004\014\u0232\001\002\000\004" +
    "\017\231\001\002\000\004\011\uff5a\001\002\000\004\027" +
    "\u0165\001\002\000\004\011\uff5b\001\002\000\004\011\u0237" +
    "\001\002\000\030\003\uff60\010\uff60\011\uff60\020\uff60\021" +
    "\uff60\023\uff60\024\uff60\025\uff60\041\uff60\042\uff60\043\uff60" +
    "\001\002\000\006\021\023\027\u0165\001\002\000\004\014" +
    "\u023d\001\002\000\004\014\u023b\001\002\000\004\021\023" +
    "\001\002\000\004\011\uff5d\001\002\000\004\027\u0165\001" +
    "\002\000\004\011\uff5c\001\002\000\004\011\u0240\001\002" +
    "\000\030\003\uff59\010\uff59\011\uff59\020\uff59\021\uff59\023" +
    "\uff59\024\uff59\025\uff59\041\uff59\042\uff59\043\uff59\001\002" +
    "\000\004\010\u02a5\001\002\000\004\010\u029d\001\002\000" +
    "\006\013\uffc2\014\u029b\001\002\000\004\013\u029a\001\002" +
    "\000\004\010\u028c\001\002\000\006\013\uffd7\014\u028a\001" +
    "\002\000\006\013\uffad\014\u0289\001\002\000\004\013\u0288" +
    "\001\002\000\004\013\u0287\001\002\000\006\013\uffb9\014" +
    "\u0286\001\002\000\004\013\u0285\001\002\000\004\010\u027d" +
    "\001\002\000\026\017\231\026\u015c\027\u0165\030\214\036" +
    "\225\037\232\040\u0164\044\u0162\045\213\046\215\001\002" +
    "\000\004\014\u0272\001\002\000\004\014\u0266\001\002\000" +
    "\004\014\u0263\001\002\000\004\014\u0260\001\002\000\004" +
    "\014\u0257\001\002\000\004\014\u0254\001\002\000\010\030" +
    "\214\036\225\040\u0164\001\002\000\006\011\u0256\014\u016e" +
    "\001\002\000\006\013\uffa8\014\uffa8\001\002\000\024\017" +
    "\231\026\u015c\027\u0165\036\225\037\232\040\u0164\044\216" +
    "\045\213\046\215\001\002\000\004\014\u025d\001\002\000" +
    "\004\014\u025a\001\002\000\006\017\231\026\u015c\001\002" +
    "\000\004\011\u025c\001\002\000\006\013\uffb1\014\uffb1\001" +
    "\002\000\004\027\u0165\001\002\000\004\011\u025f\001\002" +
    "\000\006\013\uffb0\014\uffb0\001\002\000\006\027\u0165\030" +
    "\214\001\002\000\006\011\u0262\014\u01bb\001\002\000\006" +
    "\013\uffd3\014\uffd3\001\002\000\010\030\214\037\232\040" +
    "\u0164\001\002\000\006\011\u0265\014\u01ce\001\002\000\006" +
    "\013\uffa9\014\uffa9\001\002\000\010\017\231\026\u015c\030" +
    "\214\001\002\000\004\014\u026f\001\002\000\006\011\u026c" +
    "\014\u026b\001\002\000\006\011\u026a\014\u01e3\001\002\000" +
    "\006\013\uffd2\014\uffd2\001\002\000\004\030\214\001\002" +
    "\000\006\013\uffbd\014\uffbd\001\002\000\004\011\u026e\001" +
    "\002\000\006\013\uffb3\014\uffb3\001\002\000\006\017\231" +
    "\026\u015c\001\002\000\004\011\u0271\001\002\000\006\013" +
    "\uffb2\014\uffb2\001\002\000\006\027\u0165\030\214\001\002" +
    "\000\004\014\u0279\001\002\000\006\011\u0276\014\u0275\001" +
    "\002\000\004\030\214\001\002\000\006\013\uffbe\014\uffbe" +
    "\001\002\000\004\011\u0278\001\002\000\006\013\uffb5\014" +
    "\uffb5\001\002\000\004\027\u0165\001\002\000\004\011\u027b" +
    "\001\002\000\006\013\uffb4\014\uffb4\001\002\000\006\013" +
    "\uffc1\014\u0284\001\002\000\006\017\231\027\u0165\001\002" +
    "\000\004\014\u0282\001\002\000\004\014\u0280\001\002\000" +
    "\004\017\231\001\002\000\004\011\u026c\001\002\000\004" +
    "\027\u0165\001\002\000\004\011\u0276\001\002\000\004\010" +
    "\uffbf\001\002\000\004\011\uffae\001\002\000\004\010\uffb7" +
    "\001\002\000\006\011\uffba\014\uffba\001\002\000\004\011" +
    "\uffc3\001\002\000\004\010\uffab\001\002\000\004\010\uffd5" +
    "\001\002\000\006\013\uffb8\014\u0299\001\002\000\010\017" +
    "\231\027\u0165\030\214\001\002\000\004\014\u0296\001\002" +
    "\000\004\014\u0294\001\002\000\004\014\u0290\001\002\000" +
    "\006\017\231\030\214\001\002\000\004\014\u0293\001\002" +
    "\000\004\014\u026b\001\002\000\004\017\231\001\002\000" +
    "\006\027\u0165\030\214\001\002\000\004\014\u0275\001\002" +
    "\000\006\017\231\027\u0165\001\002\000\004\014\u0298\001" +
    "\002\000\004\017\231\001\002\000\004\010\uffb6\001\002" +
    "\000\004\011\uffd8\001\002\000\004\010\uffc0\001\002\000" +
    "\006\013\uffac\014\u02a4\001\002\000\006\036\225\037\232" +
    "\001\002\000\004\014\u02a2\001\002\000\004\014\u02a0\001" +
    "\002\000\004\037\232\001\002\000\004\011\u0265\001\002" +
    "\000\004\036\225\001\002\000\004\011\u0256\001\002\000" +
    "\004\010\uffaa\001\002\000\006\026\u015c\027\u0165\001\002" +
    "\000\006\013\uffd6\014\u02a7\001\002\000\004\010\uffd4\001" +
    "\002\000\004\014\u02ac\001\002\000\004\014\u02aa\001\002" +
    "\000\004\026\u015c\001\002\000\004\011\u026a\001\002\000" +
    "\004\027\u0165\001\002\000\004\011\u0262\001\002\000\004" +
    "\016\141\001\002\000\004\011\u02b0\001\002\000\030\003" +
    "\uff88\010\uff88\011\uff88\020\uff88\021\uff88\023\uff88\024\uff88" +
    "\025\uff88\041\uff88\042\uff88\043\uff88\001\002\000\004\016" +
    "\u02b3\001\002\000\004\011\u02b7\001\002\000\004\010\u02b4" +
    "\001\002\000\006\020\015\035\071\001\002\000\004\014" +
    "\u02b6\001\002\000\004\035\071\001\002\000\030\003\uffbc" +
    "\010\uffbc\011\uffbc\020\uffbc\021\uffbc\023\uffbc\024\uffbc\025" +
    "\uffbc\041\uffbc\042\uffbc\043\uffbc\001\002\000\030\003\uffd9" +
    "\010\uffd9\011\uffd9\020\uffd9\021\uffd9\023\uffd9\024\uffd9\025" +
    "\uffd9\041\uffd9\042\uffd9\043\uffd9\001\002\000\004\015\u02ba" +
    "\001\002\000\004\012\u02bd\001\002\000\004\011\u02bc\001" +
    "\002\000\030\003\uffbb\010\uffbb\011\uffbb\020\uffbb\021\uffbb" +
    "\023\uffbb\024\uffbb\025\uffbb\041\uffbb\042\uffbb\043\uffbb\001" +
    "\002\000\004\010\u028c\001\002\000\004\016\141\001\002" +
    "\000\004\011\u02c0\001\002\000\030\003\uffd1\010\uffd1\011" +
    "\uffd1\020\uffd1\021\uffd1\023\uffd1\024\uffd1\025\uffd1\041\uffd1" +
    "\042\uffd1\043\uffd1\001\002\000\032\003\uff53\010\uff53\011" +
    "\uff53\014\uff53\020\uff53\021\uff53\023\uff53\024\uff53\025\uff53" +
    "\041\uff53\042\uff53\043\uff53\001\002\000\006\004\u02c4\013" +
    "\uff38\001\002\000\006\003\u02c8\004\u02c9\001\002\000\006" +
    "\013\uff37\014\u02c7\001\002\000\004\013\u02c6\001\002\000" +
    "\032\003\uff39\010\uff39\011\uff39\014\uff39\020\uff39\021\uff39" +
    "\023\uff39\024\uff39\025\uff39\041\uff39\042\uff39\043\uff39\001" +
    "\002\000\006\003\uff34\004\uff34\001\002\000\006\013\uff35" +
    "\014\u02cb\001\002\000\006\013\uff36\014\u02ca\001\002\000" +
    "\006\003\uff33\004\uff33\001\002\000\006\003\uff32\004\uff32" +
    "\001\002\000\004\002\000\001\002\000\032\003\uffe7\010" +
    "\uffe7\011\uffe7\014\uffe7\020\uffe7\021\uffe7\023\uffe7\024\uffe7" +
    "\025\uffe7\041\uffe7\042\uffe7\043\uffe7\001\002\000\032\003" +
    "\uffea\010\uffea\011\uffea\014\uffea\020\uffea\021\uffea\023\uffea" +
    "\024\uffea\025\uffea\041\uffea\042\uffea\043\uffea\001\002\000" +
    "\032\003\uffe8\010\uffe8\011\uffe8\014\uffe8\020\uffe8\021\uffe8" +
    "\023\uffe8\024\uffe8\025\uffe8\041\uffe8\042\uffe8\043\uffe8\001" +
    "\002\000\032\003\uffe9\010\uffe9\011\uffe9\014\uffe9\020\uffe9" +
    "\021\uffe9\023\uffe9\024\uffe9\025\uffe9\041\uffe9\042\uffe9\043" +
    "\uffe9\001\002\000\006\010\044\011\ufffc\001\002\000\030" +
    "\003\uffe5\010\uffe5\011\uffe5\020\uffe5\021\uffe5\023\uffe5\024" +
    "\uffe5\025\uffe5\041\uffe5\042\uffe5\043\uffe5\001\002\000\030" +
    "\003\033\010\ufff8\011\ufff8\020\015\021\023\023\041\024" +
    "\014\025\016\041\013\042\007\043\036\001\002\000\032" +
    "\003\ufff4\010\ufff4\011\ufff4\014\u02d5\020\ufff4\021\ufff4\023" +
    "\ufff4\024\ufff4\025\ufff4\041\ufff4\042\ufff4\043\ufff4\001\002" +
    "\000\030\003\ufff3\010\ufff3\011\ufff3\020\ufff3\021\ufff3\023" +
    "\ufff3\024\ufff3\025\ufff3\041\ufff3\042\ufff3\043\ufff3\001\002" +
    "\000\030\003\033\010\044\011\ufffb\020\015\021\023\023" +
    "\041\024\014\025\016\041\013\042\007\043\036\001\002" +
    "\000\030\003\033\010\ufff7\011\ufff7\020\015\021\023\023" +
    "\041\024\014\025\016\041\013\042\007\043\036\001\002" +
    "\000\032\003\uff56\010\uff56\011\uff56\014\uff56\020\uff56\021" +
    "\uff56\023\uff56\024\uff56\025\uff56\041\uff56\042\uff56\043\uff56" +
    "\001\002\000\026\003\033\011\ufffe\020\015\021\023\023" +
    "\041\024\014\025\016\041\013\042\007\043\036\001\002" +
    "\000\030\003\ufffa\010\044\011\ufffa\020\ufffa\021\ufffa\023" +
    "\ufffa\024\ufffa\025\ufffa\041\ufffa\042\ufffa\043\ufffa\001\002" +
    "\000\030\003\033\010\044\011\ufffd\020\015\021\023\023" +
    "\041\024\014\025\016\041\013\042\007\043\036\001\002" +
    "\000\030\003\ufff9\010\044\011\ufff9\020\ufff9\021\ufff9\023" +
    "\ufff9\024\ufff9\025\ufff9\041\ufff9\042\ufff9\043\ufff9\001\002" +
    "\000\030\003\ufff5\010\ufff5\011\ufff5\020\ufff5\021\ufff5\023" +
    "\ufff5\024\ufff5\025\ufff5\041\ufff5\042\ufff5\043\ufff5\001\002" +
    "\000\032\003\uff51\010\uff51\011\uff51\014\uff51\020\uff51\021" +
    "\uff51\023\uff51\024\uff51\025\uff51\041\uff51\042\uff51\043\uff51" +
    "\001\002\000\032\003\uff57\010\uff57\011\uff57\014\uff57\020" +
    "\uff57\021\uff57\023\uff57\024\uff57\025\uff57\041\uff57\042\uff57" +
    "\043\uff57\001\002\000\032\003\uff52\010\uff52\011\uff52\014" +
    "\uff52\020\uff52\021\uff52\023\uff52\024\uff52\025\uff52\041\uff52" +
    "\042\uff52\043\uff52\001\002\000\004\020\015\001\002\000" +
    "\004\011\u02e3\001\002\000\032\003\uff55\010\uff55\011\uff55" +
    "\014\uff55\020\uff55\021\uff55\023\uff55\024\uff55\025\uff55\041" +
    "\uff55\042\uff55\043\uff55\001\002\000\004\022\u02e5\001\002" +
    "\000\004\004\u02e8\001\002\000\004\011\u02e7\001\002\000" +
    "\032\003\uff54\010\uff54\011\uff54\014\uff54\020\uff54\021\uff54" +
    "\023\uff54\024\uff54\025\uff54\041\uff54\042\uff54\043\uff54\001" +
    "\002\000\004\011\uff48\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02e7\000\004\002\003\001\001\000\002\001\001\000" +
    "\060\003\033\006\017\007\020\011\016\012\026\013\024" +
    "\020\025\025\044\032\011\041\041\046\027\053\042\060" +
    "\005\065\037\067\007\071\023\104\045\105\034\106\036" +
    "\107\031\110\021\111\030\112\010\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\056\004\u02d8\006\u02d3\011\016\012\u02d9\013" +
    "\024\020\025\025\044\032\011\041\041\046\027\053\042" +
    "\060\005\065\037\067\007\071\023\104\045\105\034\106" +
    "\036\107\031\110\021\111\030\112\010\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\056\005\u02d0\006\017\007\u02d2" +
    "\011\u02d1\013\024\020\025\025\044\032\011\041\041\046" +
    "\027\053\042\060\005\065\037\067\007\071\023\104\045" +
    "\105\034\106\036\107\031\110\021\111\030\112\010\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\015" +
    "\050\022\046\027\054\034\051\037\047\040\055\043\060" +
    "\050\061\055\052\062\057\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\104\072\115\065\116\064\120\066" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\115\075\116\074\120\076\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\116\101\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\115\104\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\104\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\104\116\116\115\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\116\120" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\104" +
    "\123\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\104\127\115\126\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\115\131\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\104\134\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\040\137\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\104\142\115\065\116\064\001" +
    "\001\000\002\001\001\000\006\115\075\116\074\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\040\147\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\022\156\050\157\055\154\062\155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\032\021\170" +
    "\023\177\024\165\047\171\051\167\052\166\054\175\056" +
    "\173\057\174\061\201\063\176\064\200\001\001\000\004" +
    "\021\u0211\001\001\000\004\047\u020b\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\075\u0140" +
    "\101\210\113\u015f\114\u015d\117\u0160\121\u015e\122\u0162\123" +
    "\u0165\124\u015c\131\206\001\001\000\002\001\001\000\004" +
    "\054\u013d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\061\204\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\101\210\117\207\123\211\131" +
    "\206\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\100\222\102\220\103\217\001" +
    "\001\000\004\100\271\001\001\000\002\001\001\000\010" +
    "\121\227\122\226\125\225\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\122\236" +
    "\125\235\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\125\240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\122\243\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\121\247\125\246\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\125\251\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\121\254\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\121\260\122\257\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\122\262" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\121" +
    "\265\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\101\301\117\300\131\277\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\117\304" +
    "\131\303\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\131\306\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\117\311\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\101\315\131\314\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\131\317\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\101\322\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\101\326\117\325\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\117\330" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\101" +
    "\333\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\117\337\123\340\131\336\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\117\343\131\342" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\131" +
    "\345\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\117\350\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\123\354\131\353\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\131\356\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\123\361\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\117\364\123\365\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\117\367\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\123\372\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\101\377" +
    "\123\376\131\375\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\123\u0102\131\u0101\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\131\u0104\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\123\u0107" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\101" +
    "\u010b\131\u010a\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\131\u010d\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\101\u0110\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\101\u0114\123\u0113\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\123\u0116\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\101\u0119\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\101\u011d\117\u011c" +
    "\123\u011e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\101\u0121\117\u0120\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\117\u0123\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\u0126\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\117\u0129\123" +
    "\u012a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\117\u012c\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\123\u012f\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\101\u0132\123\u0133\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\101\u0135\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\123\u0138\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\075\u0140\123" +
    "\u013f\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\074\u0146\076\u0143\077\u0144\001\001\000" +
    "\002\001\001\000\004\074\u0150\001\001\000\006\121\u0149" +
    "\122\u0148\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\122\u014b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\121\u014e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\123\u0154\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\075\u0157" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\075" +
    "\u0157\101\301\117\300\131\277\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\117\u016a\121\u016c\124\u016b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\117\u016e\124\u016f\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\117\u0171\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\124\u0174\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\117\u0177\121\u0178\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\117\u017a\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\121\u017d" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\121" +
    "\u0181\124\u0180\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\124\u0183\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\121\u0186\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\074\u0146\076\u0143\077\u0144\100\222\102" +
    "\220\103\217\001\001\000\010\121\u018b\122\u018a\125\225" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\122" +
    "\u018d\125\235\001\001\000\002\001\001\000\006\121\u018f" +
    "\125\246\001\001\000\002\001\001\000\022\101\377\113" +
    "\u0191\114\u0194\121\u0192\122\u0193\123\376\124\u0195\131\375" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\121\u0198" +
    "\122\u0197\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\122\u019a\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\121\u019d\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\113\u01a0\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\121\u01a4\124\u01a3\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\124\u01a6\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\121\u01a9\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\122\u01ac\124\u01ad" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\122" +
    "\u01af\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\124\u01b2\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\114\u01b5\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\114\u01b9\117\u01b8\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\117\u01bb\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\114\u01be\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\117\u01c1\122\u01c2\124\u01c3" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\117\u01c5\122\u01c6\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\117\u01c8\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\122\u01cb\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\117\u01ce\124\u01cf\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\117\u01d1" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\124" +
    "\u01d4\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\122\u01d8\124\u01d7\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\124\u01da\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\122\u01dd\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\113\u01e1\117\u01e0\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\117\u01e3\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\113\u01e6\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\117\u01e9\121" +
    "\u01eb\122\u01ea\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\117\u01ed\122\u01ee\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\117\u01f0\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\122\u01f3\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\117\u01f6" +
    "\121\u01f7\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\117\u01f9\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\121\u01fc\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\121\u0200\122\u01ff\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\122\u0202\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\121\u0205\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\117\u020d\121\u015e\122\u0162\124\u015c\001\001\000" +
    "\002\001\001\000\010\121\u0192\122\u0193\124\u0195\001\001" +
    "\000\002\001\001\000\010\113\u015f\114\u015d\117\u0213\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\113\u0191\114\u0194\001\001\000\002\001\001\000" +
    "\062\014\u0245\016\u0243\017\u0240\021\170\023\177\024\165" +
    "\026\u0242\030\u0247\031\u024b\033\u0249\035\u0248\036\u0244\042" +
    "\u0246\044\u024a\045\u0241\047\171\051\167\052\166\054\175" +
    "\056\173\057\174\061\201\063\176\064\200\001\001\000" +
    "\014\066\u021a\070\u0218\105\u021b\114\u021c\125\u0219\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\105\u021f\125\u021e" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\125" +
    "\u0221\001\001\000\002\001\001\000\004\105\u0223\001\001" +
    "\000\002\001\001\000\004\126\u0225\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\117\u0229" +
    "\001\001\000\002\001\001\000\004\127\u022b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\114\u0230\125\u022f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\125\u0232\001\001\000\002\001\001\000\004" +
    "\114\u0234\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\105\u0238\114\u0239\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\105\u023b\001\001\000" +
    "\002\001\001\000\004\114\u023d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\014\u02a5\001" +
    "\001\000\004\042\u029b\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\u028a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\u027b\001\001\000" +
    "\030\075\u0140\101\210\113\u0250\114\u024e\117\u0251\121\u024f" +
    "\122\u0252\123\u0165\124\u015c\125\u024d\131\206\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\117" +
    "\u016a\121\u0254\124\u016b\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\101\377\113\u0191\114\u0258\121\u0192\122" +
    "\u0193\123\376\124\u0195\125\u0257\131\375\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\113\u01a0\125\u025a\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\114\u025d" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\114" +
    "\u0260\117\u01b8\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\117\u01c1\122\u0263\124\u01c3\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\113\u0268\117\u0266\125\u0267" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\117\u026c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\113" +
    "\u01e6\125\u026f\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\114\u0273\117\u0272\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\117\u0276\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\114\u0279\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\114\u027e\125\u027d\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\125\u0280\001\001\000\002\001\001" +
    "\000\004\114\u0282\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\114\u028e\117\u028c\125\u028d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\117\u0290\125\u0291\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\125\u026f\001\001\000\006\114\u0294\117" +
    "\u0272\001\001\000\002\001\001\000\006\114\u0296\125\u0257" +
    "\001\001\000\002\001\001\000\004\125\u025a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\121\u029e\122\u029d\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\122\u02a0\001\001\000\002" +
    "\001\001\000\004\121\u02a2\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\113\u02a7\114\u02a8\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\113\u02aa\001\001\000\002\001\001\000\004" +
    "\114\u02ac\001\001\000\002\001\001\000\004\040\u02ae\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\037\u02b1" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\104" +
    "\u02b4\120\066\001\001\000\002\001\001\000\004\120\076" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u02ba\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\033\u0249\035\u0248\036\u0244\001\001\000" +
    "\004\040\u02be\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\072\u02c4\073\u02c2\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\011\016\012\u02d5\013\024\020\025" +
    "\025\044\032\011\041\041\046\027\053\042\060\005\065" +
    "\037\067\007\001\001\000\002\001\001\000\024\006\u02d3" +
    "\071\023\104\045\105\034\106\036\107\031\110\021\111" +
    "\030\112\010\001\001\000\002\001\001\000\002\001\001" +
    "\000\054\006\017\007\u02d6\011\u02d1\013\024\020\025\025" +
    "\044\032\011\041\041\046\027\053\042\060\005\065\037" +
    "\067\007\071\023\104\045\105\034\106\036\107\031\110" +
    "\021\111\030\112\010\001\001\000\024\006\u02d3\071\023" +
    "\104\045\105\034\106\036\107\031\110\021\111\030\112" +
    "\010\001\001\000\002\001\001\000\026\006\017\007\u02da" +
    "\071\023\104\045\105\034\106\036\107\031\110\021\111" +
    "\030\112\010\001\001\000\030\011\u02d1\013\024\020\025" +
    "\025\044\032\011\041\041\046\027\053\042\060\005\065" +
    "\037\067\007\001\001\000\054\006\u02d3\011\016\012\u02db" +
    "\013\024\020\025\025\044\032\011\041\041\046\027\053" +
    "\042\060\005\065\037\067\007\071\023\104\045\105\034" +
    "\106\036\107\031\110\021\111\030\112\010\001\001\000" +
    "\030\011\u02d1\013\024\020\025\025\044\032\011\041\041" +
    "\046\027\053\042\060\005\065\037\067\007\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\104\u02e1\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\130\u02e5\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserDashb$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserDashb$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserDashb$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserDashb$actions {


    private void print(String texto){ System.out.print(texto); }

    private void expectedSym()
    {
        List<Integer> ids = expected_token_ids();
        StringBuilder idsName = new StringBuilder();
        for (int i : ids) idsName.append(symbl_name_from_id(i)+" ");
        print("@expected: "+idsName.toString()+"\n");
        print("_<\n");
    }

    StringBuilder log(String mensaje) {
        return Registros.sintactico.append(mensaje);
    }

  private final ParserDashb parser;

  /** Constructor */
  CUP$ParserDashb$actions(ParserDashb parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserDashb$do_action_part00000000(
    int                        CUP$ParserDashb$act_num,
    java_cup.runtime.lr_parser CUP$ParserDashb$parser,
    java.util.Stack            CUP$ParserDashb$stack,
    int                        CUP$ParserDashb$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserDashb$result;

      /* select the action based on the action number */
      switch (CUP$ParserDashb$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= dashboard EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Dashb start_val = (Dashb)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		RESULT = start_val;
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserDashb$parser.done_parsing();
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // dashboard ::= IZQLLAVE content DERLLAVE 
            {
              Dashb RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= Dashb.newDashb(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("dashboard",0, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // content ::= properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(new Par(Index.SD_PROPERTY,w1)); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // content ::= properties content2 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_PROPERTY,w1)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // content ::= properties content2 properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w3 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_PROPERTY,w1)); w2.add(new Par(Index.SD_PROPERTY,w3)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // content ::= graficos content3 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_GRAFICOS,w1)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // content ::= graficos content3 graficos 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Object> w3 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_GRAFICOS,w1)); w2.add(new Par(Index.SD_GRAFICOS,w3)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // content2 ::= graficos 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(new Par(Index.SD_GRAFICOS,w1)); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content2",2, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // content2 ::= content2 properties graficos 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Object> w3 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(new Par(Index.SD_PROPERTY,w2)); w1.add(new Par(Index.SD_GRAFICOS,w3)); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content2",2, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // content3 ::= properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(new Par(Index.SD_PROPERTY,w1)); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content3",3, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // content3 ::= content3 graficos properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w2 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w3 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(new Par(Index.SD_GRAFICOS,w2)); w1.add(new Par(Index.SD_PROPERTY,w3)); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content3",3, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // properties ::= property 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Par w1 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",5, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // properties ::= property COMA 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Par w1 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Par> list= new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",5, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // properties ::= properties property 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Par w2 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",5, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // properties ::= properties property COMA 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Par w2 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",5, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // property ::= title 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_TITLE,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // property ::= description 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_DESCRIP,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // property ::= keywords 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_KEYWORDS,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // property ::= header 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_HEADER,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // property ::= footer 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FOOTER,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // property ::= backgr 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_BACKGR,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // property ::= fontFam 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FONTFAM,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // property ::= fontSize 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FONTSIZE,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // property ::= error MI_TEXTO 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=null; log("@parser[ property ] "+w1left+"-"+w2right+"\n\n"); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // property ::= error MI_COLOR 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=null; log("@parser[ property ] "+w1left+"-"+w2right+"\n\n"); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // property ::= error DERCORCH 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=null; log("@parser[ property ] "+w1left+"-"+w2right+"\n\n"); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // property ::= error DERLLAVE 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=null; log("@parser[ property ] "+w1left+"-"+w2right+"\n\n"); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // graficos ::= grafico 
            {
              ArrayList<Object> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Object> list = new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("graficos",8, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // graficos ::= graficos grafico 
            {
              ArrayList<Object> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("graficos",8, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // grafico ::= barras 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras w1 = (Barras)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // grafico ::= barrasXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt w1 = (BarrasXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // grafico ::= pastel 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel w1 = (Pastel)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // grafico ::= pastelXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt w1 = (PastelXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // grafico ::= puntos 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos w1 = (Puntos)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // grafico ::= puntosXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt w1 = (PuntosXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // grafico ::= lineas 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas w1 = (Lineas)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // grafico ::= lineasXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt w1 = (LineasXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // grafico ::= tarjeta 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Tarjeta w1 = (Tarjeta)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // grafico ::= tarjetaXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		TarjetaXt w1 = (TarjetaXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // grafico ::= IZQLLAVE error DERLLAVE 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w3 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=null; log("@parser[ grafico ] "+w1left+"-"+w3right+"\n\n"); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // barras ::= IZQLLAVE barrasData DERLLAVE 
            {
              Barras RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barras",9, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // barrasData ::= KD_DATA IZQCORCH barrasDataList DERCORCH 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasData",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // barrasDataList ::= barrasDataValue 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras.Data w1 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Barras.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList",12, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // barrasDataList ::= barrasDataList2 barrasDataValue 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras.Data w2 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList",12, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // barrasDataList2 ::= barrasDataValue COMA 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Barras.Data w1 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Barras.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList2",13, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // barrasDataList2 ::= barrasDataList2 barrasDataValue COMA 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Barras.Data w2 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList2",13, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // barrasDataValue ::= IZQLLAVE category COMA value DERLLAVE 
            {
              Barras.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataValue",10, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // barrasDataValue ::= IZQLLAVE value COMA category DERLLAVE 
            {
              Barras.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataValue",10, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // barrasXt ::= IZQLLAVE barrasXtData COMA chart DERLLAVE 
            {
              BarrasXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXt",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // barrasXt ::= IZQLLAVE chart COMA barrasXtData DERLLAVE 
            {
              BarrasXt RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXt",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // barrasXtData ::= KD_DATA IZQCORCH barrasXtDataList DERCORCH 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtData",16, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // barrasXtDataList ::= barrasXtDataValue 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt.Data w1 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<BarrasXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList",17, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // barrasXtDataList ::= barrasXtDataList2 barrasXtDataValue 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt.Data w2 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList",17, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // barrasXtDataList2 ::= barrasXtDataValue COMA 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		BarrasXt.Data w1 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<BarrasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList2",18, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // barrasXtDataList2 ::= barrasXtDataList2 barrasXtDataValue COMA 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		BarrasXt.Data w2 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList2",18, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // barrasXtDataValue ::= IZQLLAVE category COMA value COMA color DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // barrasXtDataValue ::= IZQLLAVE category COMA color COMA value DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // barrasXtDataValue ::= IZQLLAVE value COMA category COMA color DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // barrasXtDataValue ::= IZQLLAVE value COMA color COMA category DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // barrasXtDataValue ::= IZQLLAVE color COMA value COMA category DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // barrasXtDataValue ::= IZQLLAVE color COMA category COMA value DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // pastel ::= IZQLLAVE pastelData DERLLAVE 
            {
              Pastel RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastel",19, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // pastelData ::= KD_DATA IZQCORCH pastelDataList DERCORCH 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelData",21, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // pastelDataList ::= pastelDataValue 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel.Data w1 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Pastel.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // pastelDataList ::= pastelDataList2 pastelDataValue 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel.Data w2 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // pastelDataList2 ::= pastelDataValue COMA 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Pastel.Data w1 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Pastel.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList2",23, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // pastelDataList2 ::= pastelDataList2 pastelDataValue COMA 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Pastel.Data w2 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList2",23, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // pastelDataValue ::= IZQLLAVE label COMA value DERLLAVE 
            {
              Pastel.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataValue",20, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // pastelDataValue ::= IZQLLAVE value COMA label DERLLAVE 
            {
              Pastel.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataValue",20, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // pastelXt ::= IZQLLAVE pastelXtData COMA pastelXtChart DERLLAVE 
            {
              PastelXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart2 w2 = (Chart2)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXt",24, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // pastelXt ::= IZQLLAVE pastelXtChart COMA pastelXtData DERLLAVE 
            {
              PastelXt RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		Chart2 w2 = (Chart2)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXt",24, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // pastelXtData ::= KD_DATA IZQCORCH pastelXtDataList DERCORCH 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtData",26, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // pastelXtDataList ::= pastelXtDataValue 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt.Data w1 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<PastelXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList",27, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // pastelXtDataList ::= pastelXtDataList2 pastelXtDataValue 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt.Data w2 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList",27, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // pastelXtDataList2 ::= pastelXtDataValue COMA 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PastelXt.Data w1 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<PastelXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList2",28, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // pastelXtDataList2 ::= pastelXtDataList2 pastelXtDataValue COMA 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PastelXt.Data w2 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList2",28, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // pastelXtDataValue ::= IZQLLAVE label COMA value COMA color DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // pastelXtDataValue ::= IZQLLAVE label COMA color COMA value DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // pastelXtDataValue ::= IZQLLAVE value COMA label COMA color DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // pastelXtDataValue ::= IZQLLAVE value COMA color COMA label DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // pastelXtDataValue ::= IZQLLAVE color COMA value COMA label DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // pastelXtDataValue ::= IZQLLAVE color COMA label COMA value DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // puntos ::= IZQLLAVE puntosData DERLLAVE 
            {
              Puntos RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntos",31, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // puntosData ::= KD_DATA IZQCORCH puntosDataList DERCORCH 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosData",33, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // puntosDataList ::= puntosDataValue 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos.Data w1 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Puntos.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList",34, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // puntosDataList ::= puntosDataList2 puntosDataValue 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos.Data w2 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList",34, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // puntosDataList2 ::= puntosDataValue COMA 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Puntos.Data w1 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Puntos.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList2",35, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // puntosDataList2 ::= puntosDataList2 puntosDataValue COMA 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Puntos.Data w2 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList2",35, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // puntosDataValue ::= IZQLLAVE xValue COMA yValue DERLLAVE 
            {
              Puntos.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // puntosDataValue ::= IZQLLAVE yValue COMA xValue DERLLAVE 
            {
              Puntos.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // puntosXt ::= IZQLLAVE puntosXtData COMA chart DERLLAVE 
            {
              PuntosXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXt",36, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // puntosXt ::= IZQLLAVE chart COMA puntosXtData DERLLAVE 
            {
              PuntosXt RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXt",36, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // puntosXtData ::= KD_DATA IZQCORCH puntosXtDataList DERCORCH 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtData",38, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // puntosXtDataList ::= puntosXtDataValue 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt.Data w1 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<PuntosXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList",39, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // puntosXtDataList ::= puntosXtDataList2 puntosXtDataValue 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt.Data w2 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList",39, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // puntosXtDataList2 ::= puntosXtDataValue COMA 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PuntosXt.Data w1 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<PuntosXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList2",40, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // puntosXtDataList2 ::= puntosXtDataList2 puntosXtDataValue COMA 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PuntosXt.Data w2 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList2",40, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // puntosXtDataValue ::= IZQLLAVE xValue COMA yValue COMA size COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // puntosXtDataValue ::= IZQLLAVE xValue COMA yValue COMA color COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // puntosXtDataValue ::= IZQLLAVE xValue COMA size COMA yValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // puntosXtDataValue ::= IZQLLAVE xValue COMA size COMA color COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // puntosXtDataValue ::= IZQLLAVE xValue COMA color COMA size COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // puntosXtDataValue ::= IZQLLAVE xValue COMA color COMA yValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // puntosXtDataValue ::= IZQLLAVE yValue COMA xValue COMA size COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // puntosXtDataValue ::= IZQLLAVE yValue COMA xValue COMA color COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // puntosXtDataValue ::= IZQLLAVE yValue COMA size COMA xValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // puntosXtDataValue ::= IZQLLAVE yValue COMA size COMA color COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // puntosXtDataValue ::= IZQLLAVE yValue COMA color COMA size COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // puntosXtDataValue ::= IZQLLAVE yValue COMA color COMA xValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // puntosXtDataValue ::= IZQLLAVE size COMA yValue COMA xValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // puntosXtDataValue ::= IZQLLAVE size COMA yValue COMA color COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // puntosXtDataValue ::= IZQLLAVE size COMA xValue COMA yValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // puntosXtDataValue ::= IZQLLAVE size COMA xValue COMA color COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // puntosXtDataValue ::= IZQLLAVE size COMA color COMA xValue COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // puntosXtDataValue ::= IZQLLAVE size COMA color COMA yValue COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // puntosXtDataValue ::= IZQLLAVE color COMA yValue COMA size COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // puntosXtDataValue ::= IZQLLAVE color COMA yValue COMA xValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // puntosXtDataValue ::= IZQLLAVE color COMA size COMA yValue COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // puntosXtDataValue ::= IZQLLAVE color COMA size COMA xValue COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // puntosXtDataValue ::= IZQLLAVE color COMA xValue COMA size COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // puntosXtDataValue ::= IZQLLAVE color COMA xValue COMA yValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // lineas ::= IZQLLAVE lineasData COMA chart DERLLAVE 
            {
              Lineas RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineas",41, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // lineas ::= IZQLLAVE chart COMA lineasData DERLLAVE 
            {
              Lineas RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineas",41, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // lineasData ::= KD_DATA IZQCORCH lineasDataList DERCORCH 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasData",43, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // lineasDataList ::= lineasDataValue 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data w1 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Lineas.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // lineasDataList ::= lineasDataList2 lineasDataValue 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data w2 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // lineasDataList2 ::= lineasDataValue COMA 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data w1 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Lineas.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList2",45, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // lineasDataList2 ::= lineasDataList2 lineasDataValue COMA 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data w2 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList2",45, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // lineasDataValue ::= IZQLLAVE name COMA points DERLLAVE 
            {
              Lineas.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w2 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataValue",42, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // lineasDataValue ::= IZQLLAVE points COMA name DERLLAVE 
            {
              Lineas.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<Lineas.Data.Punto> w2 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataValue",42, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // lineasXt ::= IZQLLAVE lineasXtData COMA chart DERLLAVE 
            {
              LineasXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXt",46, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // lineasXt ::= IZQLLAVE chart COMA lineasXtData DERLLAVE 
            {
              LineasXt RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXt",46, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // lineasXtData ::= KD_DATA IZQCORCH lineasXtDataList DERCORCH 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtData",48, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // lineasXtDataList ::= lineasXtDataValue 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data w1 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<LineasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList",49, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // lineasXtDataList ::= lineasXtDataList2 lineasXtDataValue 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data w2 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList",49, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // lineasXtDataList2 ::= lineasXtDataValue COMA 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data w1 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<LineasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList2",50, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // lineasXtDataList2 ::= lineasXtDataList2 lineasXtDataValue COMA 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data w2 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList2",50, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // lineasXtDataValue ::= IZQLLAVE name COMA pointsXt COMA color COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // lineasXtDataValue ::= IZQLLAVE name COMA pointsXt COMA lineStyle COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // lineasXtDataValue ::= IZQLLAVE name COMA color COMA pointsXt COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // lineasXtDataValue ::= IZQLLAVE name COMA color COMA lineStyle COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // lineasXtDataValue ::= IZQLLAVE name COMA lineStyle COMA color COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // lineasXtDataValue ::= IZQLLAVE name COMA lineStyle COMA pointsXt COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA name COMA color COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA name COMA lineStyle COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA color COMA name COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA color COMA lineStyle COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA lineStyle COMA color COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA lineStyle COMA name COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // lineasXtDataValue ::= IZQLLAVE color COMA pointsXt COMA name COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // lineasXtDataValue ::= IZQLLAVE color COMA pointsXt COMA lineStyle COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // lineasXtDataValue ::= IZQLLAVE color COMA name COMA pointsXt COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // lineasXtDataValue ::= IZQLLAVE color COMA name COMA lineStyle COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // lineasXtDataValue ::= IZQLLAVE color COMA lineStyle COMA name COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // lineasXtDataValue ::= IZQLLAVE color COMA lineStyle COMA pointsXt COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA pointsXt COMA color COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA pointsXt COMA name COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA color COMA pointsXt COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA color COMA name COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA name COMA color COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA name COMA pointsXt COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // tarjeta ::= IZQLLAVE KD_DATA IZQLLAVE tarjetaData DERLLAVE DERLLAVE 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		Tarjeta w1 = (Tarjeta)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjeta",51, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // tarjetaData ::= value COMA label COMA description 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // tarjetaData ::= value COMA description COMA label 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // tarjetaData ::= label COMA value COMA description 
            {
              Tarjeta RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // tarjetaData ::= label COMA description COMA value 
            {
              Tarjeta RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // tarjetaData ::= description COMA label COMA value 
            {
              Tarjeta RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // tarjetaData ::= description COMA value COMA label 
            {
              Tarjeta RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // tarjetaXt ::= IZQLLAVE KD_DATA IZQLLAVE tarjetaXtData DERLLAVE DERLLAVE 
            {
              TarjetaXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		TarjetaXt w1 = (TarjetaXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaXt",53, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // tarjetaXtData ::= value COMA label COMA description COMA icon COMA color COMA link 
            {
              TarjetaXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w5left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w5right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w5 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w6left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w6right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w6 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new TarjetaXt(w1,w2,w3,w4,w5,w6); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaXtData",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // title ::= KD_TITLE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("title",66, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // description ::= KD_DESCRIP MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("description",67, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // header ::= KD_HEADER IZQLLAVE title DERLLAVE 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("header",68, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // footer ::= KD_FOOTER IZQLLAVE copyright DERLLAVE 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("footer",69, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // backgr ::= KD_BACKGR MI_COLOR 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("backgr",70, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // fontFam ::= KD_FONTFAM MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("fontFam",71, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // fontSize ::= KD_FONTSIZE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("fontSize",72, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // category ::= KD_CATEGORY MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("category",73, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // value ::= KD_VALUE MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("value",74, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // color ::= KD_COLOR MI_COLOR 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("color",77, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // lineStyle ::= KD_LINE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineStyle",87, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // name ::= KD_NAME MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("name",81, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // label ::= KD_LABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("label",83, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // icon ::= KD_ICON MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("icon",84, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // link ::= KD_LINK MI_URL 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("link",85, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // copyright ::= KD_COPYR MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("copyright",86, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // xLabel ::= KD_XLABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("xLabel",75, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // yLabel ::= KD_YLABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("yLabel",76, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // legend ::= KD_LEGEND MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("legend",78, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // xValue ::= KD_X MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("xValue",79, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // yValue ::= KD_Y MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("yValue",80, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // size ::= KD_SIZE MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("size",82, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // chart ::= KD_CHART IZQLLAVE title COMA xLabel COMA yLabel DERLLAVE 
            {
              Chart1 RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // chart ::= KD_CHART IZQLLAVE title COMA yLabel COMA xLabel DERLLAVE 
            {
              Chart1 RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // chart ::= KD_CHART IZQLLAVE xLabel COMA title COMA yLabel DERLLAVE 
            {
              Chart1 RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // chart ::= KD_CHART IZQLLAVE xLabel COMA yLabel COMA title DERLLAVE 
            {
              Chart1 RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // chart ::= KD_CHART IZQLLAVE yLabel COMA xLabel COMA title DERLLAVE 
            {
              Chart1 RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // chart ::= KD_CHART IZQLLAVE yLabel COMA title COMA xLabel DERLLAVE 
            {
              Chart1 RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // pastelXtChart ::= KD_CHART IZQLLAVE title COMA legend DERLLAVE 
            {
              Chart2 RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart2(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtChart",29, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // pastelXtChart ::= KD_CHART IZQLLAVE legend COMA title DERLLAVE 
            {
              Chart2 RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart2(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtChart",29, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // keywords ::= KD_KEYWORDS IZQCORCH keywordList DERCORCH 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywords",55, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // keywordList ::= 
            {
              ArrayList<String> RESULT =null;
		 ArrayList<String> list = new ArrayList<>(); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // keywordList ::= MI_TEXTO 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<String> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // keywordList ::= keywordList2 MI_TEXTO 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // keywordList ::= keywordList2 error 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // keywordList2 ::= MI_TEXTO COMA 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<String> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList2",57, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // keywordList2 ::= keywordList2 MI_TEXTO COMA 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList2",57, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // keywordList2 ::= keywordList2 error COMA 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList2",57, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // points ::= KD_PONTS IZQCORCH pointList DERCORCH 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("points",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // pointList ::= pointValue 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data.Punto w1 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Lineas.Data.Punto> list = new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList",60, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // pointList ::= pointList2 pointValue 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data.Punto w2 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList",60, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // pointList2 ::= pointValue COMA 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data.Punto w1 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Lineas.Data.Punto> list = new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList2",61, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // pointList2 ::= pointList2 pointValue COMA 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data.Punto w2 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList2",61, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // pointValue ::= IZQLLAVE xValue COMA yValue DERLLAVE 
            {
              Lineas.Data.Punto RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data.Punto(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointValue",58, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // pointValue ::= IZQLLAVE yValue COMA xValue DERLLAVE 
            {
              Lineas.Data.Punto RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data.Punto(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointValue",58, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // pointsXt ::= KD_PONTS IZQCORCH pointXtList DERCORCH 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointsXt",63, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // pointXtList ::= pointXtValue 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data.Punto w1 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<LineasXt.Data.Punto> list = new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList",64, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // pointXtList ::= pointXtList2 pointXtValue 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data.Punto w2 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList",64, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // pointXtList2 ::= pointXtValue COMA 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data.Punto w1 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<LineasXt.Data.Punto> list = new ArrayList<>(); if(w1!=null) list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList2",65, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // pointXtList2 ::= pointXtList2 pointXtValue COMA 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data.Punto w2 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 if(w2!=null) w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList2",65, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // pointXtValue ::= IZQLLAVE xValue COMA yValue COMA label DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // pointXtValue ::= IZQLLAVE xValue COMA label COMA yValue DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // pointXtValue ::= IZQLLAVE yValue COMA xValue COMA label DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // pointXtValue ::= IZQLLAVE yValue COMA label COMA xValue DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // pointXtValue ::= IZQLLAVE label COMA yValue COMA xValue DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // pointXtValue ::= IZQLLAVE label COMA xValue COMA yValue DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserDashb$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserDashb$do_action(
    int                        CUP$ParserDashb$act_num,
    java_cup.runtime.lr_parser CUP$ParserDashb$parser,
    java.util.Stack            CUP$ParserDashb$stack,
    int                        CUP$ParserDashb$top)
    throws java.lang.Exception
    {
              return CUP$ParserDashb$do_action_part00000000(
                               CUP$ParserDashb$act_num,
                               CUP$ParserDashb$parser,
                               CUP$ParserDashb$stack,
                               CUP$ParserDashb$top);
    }
}

}
