
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package josq.lenguajes.automatas;

import java.util.ArrayList;
import josq.lenguajes.modelos.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserDashb extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return ParserDashbSym.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserDashb() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserDashb(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserDashb(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\310\000\002\002\004\000\002\002\005\000\002\003" +
    "\004\000\002\003\004\000\002\004\003\000\002\004\005" +
    "\000\002\005\003\000\002\005\005\000\002\016\003\000" +
    "\002\016\004\000\002\017\004\000\002\017\005\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\021\003\000\002\021\004\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\004\000\002\022\005\000\002\024\006\000" +
    "\002\025\003\000\002\025\004\000\002\026\004\000\002" +
    "\026\005\000\002\023\007\000\002\023\007\000\002\027" +
    "\007\000\002\031\006\000\002\032\003\000\002\032\004" +
    "\000\002\033\004\000\002\033\005\000\002\030\011\000" +
    "\002\030\011\000\002\030\011\000\002\030\011\000\002" +
    "\030\011\000\002\030\011\000\002\034\005\000\002\036" +
    "\006\000\002\037\003\000\002\037\004\000\002\035\007" +
    "\000\002\035\007\000\002\040\004\000\002\040\005\000" +
    "\002\041\007\000\002\043\006\000\002\044\003\000\002" +
    "\044\004\000\002\045\004\000\002\045\005\000\002\042" +
    "\011\000\002\042\011\000\002\042\011\000\002\042\011" +
    "\000\002\042\011\000\002\042\011\000\002\050\005\000" +
    "\002\052\006\000\002\053\003\000\002\053\004\000\002" +
    "\054\004\000\002\054\005\000\002\051\007\000\002\051" +
    "\007\000\002\055\007\000\002\057\006\000\002\060\003" +
    "\000\002\060\004\000\002\061\004\000\002\061\005\000" +
    "\002\056\013\000\002\056\013\000\002\056\013\000\002" +
    "\056\013\000\002\056\013\000\002\056\013\000\002\056" +
    "\013\000\002\056\013\000\002\056\013\000\002\056\013" +
    "\000\002\056\013\000\002\056\013\000\002\056\013\000" +
    "\002\056\013\000\002\056\013\000\002\056\013\000\002" +
    "\056\013\000\002\056\013\000\002\056\013\000\002\056" +
    "\013\000\002\056\013\000\002\056\013\000\002\056\013" +
    "\000\002\056\013\000\002\062\007\000\002\064\006\000" +
    "\002\065\003\000\002\065\004\000\002\066\004\000\002" +
    "\066\005\000\002\063\007\000\002\063\007\000\002\067" +
    "\007\000\002\071\006\000\002\072\003\000\002\072\004" +
    "\000\002\073\004\000\002\073\005\000\002\070\013\000" +
    "\002\070\013\000\002\070\013\000\002\070\013\000\002" +
    "\070\013\000\002\070\013\000\002\070\013\000\002\070" +
    "\013\000\002\070\013\000\002\070\013\000\002\070\013" +
    "\000\002\070\013\000\002\070\013\000\002\070\013\000" +
    "\002\070\013\000\002\070\013\000\002\070\013\000\002" +
    "\070\013\000\002\070\013\000\002\070\013\000\002\070" +
    "\013\000\002\070\013\000\002\070\013\000\002\070\013" +
    "\000\002\074\010\000\002\075\007\000\002\075\007\000" +
    "\002\075\007\000\002\075\007\000\002\075\007\000\002" +
    "\075\007\000\002\076\010\000\002\077\015\000\002\006" +
    "\004\000\002\007\004\000\002\010\006\000\002\011\006" +
    "\000\002\012\004\000\002\013\004\000\002\014\004\000" +
    "\002\100\004\000\002\101\004\000\002\104\004\000\002" +
    "\116\004\000\002\110\004\000\002\112\004\000\002\113" +
    "\004\000\002\114\004\000\002\115\004\000\002\102\004" +
    "\000\002\103\004\000\002\105\004\000\002\106\004\000" +
    "\002\107\004\000\002\111\004\000\002\047\012\000\002" +
    "\046\010\000\002\117\006\000\002\120\002\000\002\120" +
    "\003\000\002\120\004\000\002\121\004\000\002\121\005" +
    "\000\002\123\006\000\002\124\003\000\002\124\004\000" +
    "\002\125\004\000\002\125\005\000\002\122\007\000\002" +
    "\127\006\000\002\130\003\000\002\130\004\000\002\131" +
    "\004\000\002\131\005\000\002\126\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u028d\000\004\010\005\001\002\000\004\002\u028f\001" +
    "\002\000\026\003\034\010\045\020\015\021\024\023\042" +
    "\024\014\025\016\041\013\042\006\043\037\001\002\000" +
    "\004\010\u028a\001\002\000\030\003\uffe4\010\uffe4\011\uffe4" +
    "\020\uffe4\021\uffe4\023\uffe4\024\uffe4\025\uffe4\041\uffe4\042" +
    "\uffe4\043\uffe4\001\002\000\030\003\uffe2\010\uffe2\011\uffe2" +
    "\020\uffe2\021\uffe2\023\uffe2\024\uffe2\025\uffe2\041\uffe2\042" +
    "\uffe2\043\uffe2\001\002\000\030\003\uffe8\010\uffe8\011\uffe8" +
    "\020\uffe8\021\uffe8\023\uffe8\024\uffe8\025\uffe8\041\uffe8\042" +
    "\uffe8\043\uffe8\001\002\000\012\003\uffee\010\uffee\011\uffee" +
    "\014\uffee\001\002\000\004\010\u0287\001\002\000\004\004" +
    "\u0286\001\002\000\004\004\u0285\001\002\000\004\004\u0284" +
    "\001\002\000\030\003\uffed\010\uffed\011\uffed\020\uffed\021" +
    "\uffed\023\uffed\024\uffed\025\uffed\041\uffed\042\uffed\043\uffed" +
    "\001\002\000\012\003\ufff9\010\ufff9\011\ufff9\014\u0283\001" +
    "\002\000\006\003\034\010\045\001\002\000\012\003\ufff0" +
    "\010\ufff0\011\ufff0\014\ufff0\001\002\000\022\020\015\021" +
    "\024\023\042\024\014\025\016\041\013\042\006\043\037" +
    "\001\002\000\004\004\u027c\001\002\000\012\003\ufff3\010" +
    "\ufff3\011\ufff3\014\ufff3\001\002\000\030\003\uffeb\010\uffeb" +
    "\011\uffeb\020\uffeb\021\uffeb\023\uffeb\024\uffeb\025\uffeb\041" +
    "\uffeb\042\uffeb\043\uffeb\001\002\000\030\003\uffea\010\uffea" +
    "\011\uffea\020\uffea\021\uffea\023\uffea\024\uffea\025\uffea\041" +
    "\uffea\042\uffea\043\uffea\001\002\000\026\003\034\010\045" +
    "\020\015\021\024\023\042\024\014\025\016\041\013\042" +
    "\006\043\037\001\002\000\030\003\uffe6\010\uffe6\011\uffe6" +
    "\020\uffe6\021\uffe6\023\uffe6\024\uffe6\025\uffe6\041\uffe6\042" +
    "\uffe6\043\uffe6\001\002\000\012\003\uffef\010\uffef\011\uffef" +
    "\014\uffef\001\002\000\012\003\ufff1\010\ufff1\011\ufff1\014" +
    "\ufff1\001\002\000\004\011\u0276\001\002\000\004\011\u0275" +
    "\001\002\000\012\003\ufff4\010\ufff4\011\ufff4\014\ufff4\001" +
    "\002\000\004\012\u026d\001\002\000\030\003\uffe3\010\uffe3" +
    "\011\uffe3\020\uffe3\021\uffe3\023\uffe3\024\uffe3\025\uffe3\041" +
    "\uffe3\042\uffe3\043\uffe3\001\002\000\012\003\ufff2\010\ufff2" +
    "\011\ufff2\014\ufff2\001\002\000\004\007\u026c\001\002\000" +
    "\030\003\uffe7\010\uffe7\011\uffe7\020\uffe7\021\uffe7\023\uffe7" +
    "\024\uffe7\025\uffe7\041\uffe7\042\uffe7\043\uffe7\001\002\000" +
    "\030\003\uffe5\010\uffe5\011\uffe5\020\uffe5\021\uffe5\023\uffe5" +
    "\024\uffe5\025\uffe5\041\uffe5\042\uffe5\043\uffe5\001\002\000" +
    "\004\015\054\001\002\000\030\003\uffe9\010\uffe9\011\uffe9" +
    "\020\uffe9\021\uffe9\023\uffe9\024\uffe9\025\uffe9\041\uffe9\042" +
    "\uffe9\043\uffe9\001\002\000\012\003\ufff5\010\ufff5\011\ufff5" +
    "\014\ufff5\001\002\000\004\014\u0269\001\002\000\004\011" +
    "\u0268\001\002\000\004\014\u025d\001\002\000\004\014\u025a" +
    "\001\002\000\006\010\106\012\105\001\002\000\004\011" +
    "\104\001\002\000\004\011\103\001\002\000\004\014\100" +
    "\001\002\000\004\014\061\001\002\000\004\016\063\001" +
    "\002\000\004\011\077\001\002\000\004\010\064\001\002" +
    "\000\004\020\015\001\002\000\004\014\066\001\002\000" +
    "\004\033\070\001\002\000\004\014\072\001\002\000\004" +
    "\004\071\001\002\000\004\014\uff53\001\002\000\004\034" +
    "\074\001\002\000\004\011\076\001\002\000\004\004\075" +
    "\001\002\000\004\011\uff52\001\002\000\004\011\uff4d\001" +
    "\002\000\030\003\uffb0\010\uffb0\011\uffb0\020\uffb0\021\uffb0" +
    "\023\uffb0\024\uffb0\025\uffb0\041\uffb0\042\uffb0\043\uffb0\001" +
    "\002\000\004\016\063\001\002\000\004\011\102\001\002" +
    "\000\030\003\uff8a\010\uff8a\011\uff8a\020\uff8a\021\uff8a\023" +
    "\uff8a\024\uff8a\025\uff8a\041\uff8a\042\uff8a\043\uff8a\001\002" +
    "\000\030\003\uffb8\010\uffb8\011\uffb8\020\uffb8\021\uffb8\023" +
    "\uffb8\024\uffb8\025\uffb8\041\uffb8\042\uffb8\043\uffb8\001\002" +
    "\000\030\003\uffcc\010\uffcc\011\uffcc\020\uffcc\021\uffcc\023" +
    "\uffcc\024\uffcc\025\uffcc\041\uffcc\042\uffcc\043\uffcc\001\002" +
    "\000\004\010\214\001\002\000\010\017\115\021\024\027" +
    "\110\001\002\000\004\011\163\001\002\000\004\006\162" +
    "\001\002\000\004\014\153\001\002\000\004\011\151\001" +
    "\002\000\004\014\142\001\002\000\004\014\117\001\002" +
    "\000\004\004\116\001\002\000\006\011\uff57\014\uff57\001" +
    "\002\000\006\017\115\021\024\001\002\000\004\014\124" +
    "\001\002\000\004\014\122\001\002\000\004\017\115\001" +
    "\002\000\004\011\uff6a\001\002\000\004\021\024\001\002" +
    "\000\006\011\uff6b\014\126\001\002\000\004\031\130\001" +
    "\002\000\004\014\132\001\002\000\004\004\131\001\002" +
    "\000\004\014\uff56\001\002\000\004\030\134\001\002\000" +
    "\004\014\136\001\002\000\004\007\135\001\002\000\006" +
    "\011\uff5a\014\uff5a\001\002\000\004\032\140\001\002\000" +
    "\004\011\uff64\001\002\000\004\005\141\001\002\000\004" +
    "\011\uff55\001\002\000\006\017\115\027\110\001\002\000" +
    "\004\014\147\001\002\000\004\014\145\001\002\000\004" +
    "\017\115\001\002\000\004\011\uff66\001\002\000\004\027" +
    "\110\001\002\000\004\011\uff67\001\002\000\004\011\152" +
    "\001\002\000\030\003\uff6c\010\uff6c\011\uff6c\020\uff6c\021" +
    "\uff6c\023\uff6c\024\uff6c\025\uff6c\041\uff6c\042\uff6c\043\uff6c" +
    "\001\002\000\006\021\024\027\110\001\002\000\004\014" +
    "\160\001\002\000\004\014\156\001\002\000\004\021\024" +
    "\001\002\000\004\011\uff69\001\002\000\004\027\110\001" +
    "\002\000\004\011\uff68\001\002\000\006\011\uff5b\014\uff5b" +
    "\001\002\000\004\011\164\001\002\000\030\003\uff65\010" +
    "\uff65\011\uff65\020\uff65\021\uff65\023\uff65\024\uff65\025\uff65" +
    "\041\uff65\042\uff65\043\uff65\001\002\000\004\010\u0251\001" +
    "\002\000\004\010\u0249\001\002\000\006\013\uffca\014\u0247" +
    "\001\002\000\004\013\u0246\001\002\000\004\010\u0240\001" +
    "\002\000\004\010\u0231\001\002\000\004\010\u0221\001\002" +
    "\000\004\010\u021a\001\002\000\006\013\uffde\014\u0219\001" +
    "\002\000\004\013\u0218\001\002\000\006\013\uffb6\014\u0217" +
    "\001\002\000\004\013\u0216\001\002\000\004\013\u0215\001" +
    "\002\000\004\013\u0214\001\002\000\006\013\uff90\014\u0213" +
    "\001\002\000\006\013\uffc2\014\u0212\001\002\000\004\010" +
    "\u0208\001\002\000\004\013\u0206\001\002\000\004\013\u0205" +
    "\001\002\000\004\013\u0204\001\002\000\004\010\u01fc\001" +
    "\002\000\006\013\uffd6\014\u01fa\001\002\000\006\013\uff88" +
    "\014\u01f9\001\002\000\026\017\115\026\217\027\110\030" +
    "\134\036\222\037\221\040\237\044\233\045\234\046\223" +
    "\001\002\000\006\013\uffae\014\216\001\002\000\004\010" +
    "\uffac\001\002\000\004\004\u01f8\001\002\000\004\014\u01d9" +
    "\001\002\000\004\006\u01d8\001\002\000\004\006\u01d7\001" +
    "\002\000\004\004\u01d6\001\002\000\004\014\u01b7\001\002" +
    "\000\004\014\u01ad\001\002\000\004\014\u018e\001\002\000" +
    "\004\014\u017d\001\002\000\004\014\u015d\001\002\000\004" +
    "\014\u0153\001\002\000\004\014\u0108\001\002\000\004\012" +
    "\367\001\002\000\004\004\366\001\002\000\004\014\363" +
    "\001\002\000\004\014\323\001\002\000\004\006\322\001" +
    "\002\000\004\014\241\001\002\000\010\030\134\044\233" +
    "\045\234\001\002\000\004\014\311\001\002\000\004\014" +
    "\260\001\002\000\004\014\247\001\002\000\004\011\246" +
    "\001\002\000\006\013\uff8c\014\uff8c\001\002\000\006\030" +
    "\134\045\234\001\002\000\004\014\255\001\002\000\004" +
    "\014\252\001\002\000\004\045\234\001\002\000\004\011" +
    "\254\001\002\000\006\013\uff84\014\uff84\001\002\000\004" +
    "\030\134\001\002\000\004\011\257\001\002\000\006\013" +
    "\uff83\014\uff83\001\002\000\006\044\263\045\234\001\002" +
    "\000\004\014\306\001\002\000\004\014\303\001\002\000" +
    "\004\012\264\001\002\000\004\010\267\001\002\000\004" +
    "\010\267\001\002\000\004\013\300\001\002\000\004\036" +
    "\222\001\002\000\006\013\uff3e\014\271\001\002\000\004" +
    "\010\uff3c\001\002\000\004\014\273\001\002\000\004\037" +
    "\221\001\002\000\004\014\275\001\002\000\004\017\115" +
    "\001\002\000\004\011\277\001\002\000\006\013\uff3a\014" +
    "\uff3a\001\002\000\006\011\uff3f\014\uff3f\001\002\000\006" +
    "\013\uff3d\014\302\001\002\000\004\010\uff3b\001\002\000" +
    "\004\045\234\001\002\000\004\011\305\001\002\000\006" +
    "\013\uff82\014\uff82\001\002\000\004\044\263\001\002\000" +
    "\004\011\310\001\002\000\006\013\uff81\014\uff81\001\002" +
    "\000\006\030\134\044\263\001\002\000\004\014\317\001" +
    "\002\000\004\014\314\001\002\000\004\030\134\001\002" +
    "\000\004\011\316\001\002\000\006\013\uff7f\014\uff7f\001" +
    "\002\000\004\044\263\001\002\000\004\011\321\001\002" +
    "\000\006\013\uff80\014\uff80\001\002\000\006\011\uff4e\014" +
    "\uff4e\001\002\000\010\030\134\036\222\040\237\001\002" +
    "\000\004\014\352\001\002\000\004\014\341\001\002\000" +
    "\006\011\330\014\327\001\002\000\006\030\134\040\237" +
    "\001\002\000\006\013\uffb1\014\uffb1\001\002\000\004\014" +
    "\336\001\002\000\004\014\333\001\002\000\004\030\134" +
    "\001\002\000\004\011\335\001\002\000\006\013\uffa4\014" +
    "\uffa4\001\002\000\004\040\237\001\002\000\004\011\340" +
    "\001\002\000\006\013\uffa3\014\uffa3\001\002\000\006\030" +
    "\134\036\222\001\002\000\004\014\347\001\002\000\004" +
    "\014\344\001\002\000\004\030\134\001\002\000\004\011" +
    "\346\001\002\000\006\013\uffa2\014\uffa2\001\002\000\004" +
    "\036\222\001\002\000\004\011\351\001\002\000\006\013" +
    "\uffa1\014\uffa1\001\002\000\006\036\222\040\237\001\002" +
    "\000\004\014\360\001\002\000\004\014\355\001\002\000" +
    "\004\040\237\001\002\000\004\011\357\001\002\000\006" +
    "\013\uff9f\014\uff9f\001\002\000\004\036\222\001\002\000" +
    "\004\011\362\001\002\000\006\013\uffa0\014\uffa0\001\002" +
    "\000\004\046\223\001\002\000\004\011\365\001\002\000" +
    "\006\013\uff8b\014\uff8b\001\002\000\006\011\uff59\014\uff59" +
    "\001\002\000\004\010\372\001\002\000\004\013\u0107\001" +
    "\002\000\004\010\u0101\001\002\000\004\036\222\001\002" +
    "\000\006\013\uff44\014\374\001\002\000\004\010\uff42\001" +
    "\002\000\004\014\376\001\002\000\004\037\221\001\002" +
    "\000\006\011\u0100\014\275\001\002\000\006\013\uff40\014" +
    "\uff40\001\002\000\004\036\222\001\002\000\006\013\uff43" +
    "\014\u0103\001\002\000\004\010\uff41\001\002\000\004\014" +
    "\u0105\001\002\000\004\037\221\001\002\000\004\011\u0100" +
    "\001\002\000\006\011\uff45\014\uff45\001\002\000\024\017" +
    "\115\026\217\027\110\036\222\037\221\040\237\044\263" +
    "\045\234\046\223\001\002\000\004\014\u014a\001\002\000" +
    "\004\014\u0141\001\002\000\004\014\u013e\001\002\000\004" +
    "\014\u0135\001\002\000\004\014\u0130\001\002\000\004\014" +
    "\u012d\001\002\000\004\014\u0124\001\002\000\004\014\u011b" +
    "\001\002\000\004\014\u0112\001\002\000\006\044\263\045" +
    "\234\001\002\000\004\014\u0118\001\002\000\004\014\u0115" +
    "\001\002\000\004\045\234\001\002\000\004\011\u0117\001" +
    "\002\000\006\013\uff76\014\uff76\001\002\000\004\044\263" +
    "\001\002\000\004\011\u011a\001\002\000\006\013\uff75\014" +
    "\uff75\001\002\000\006\036\222\040\237\001\002\000\004" +
    "\014\u0121\001\002\000\004\014\u011e\001\002\000\004\040" +
    "\237\001\002\000\004\011\u0120\001\002\000\006\013\uff97" +
    "\014\uff97\001\002\000\004\036\222\001\002\000\004\011" +
    "\u0123\001\002\000\006\013\uff98\014\uff98\001\002\000\006" +
    "\037\221\040\237\001\002\000\004\014\u012a\001\002\000" +
    "\004\014\u0127\001\002\000\004\040\237\001\002\000\004" +
    "\011\u0129\001\002\000\006\013\uff93\014\uff93\001\002\000" +
    "\004\037\221\001\002\000\004\011\u012c\001\002\000\006" +
    "\013\uff94\014\uff94\001\002\000\004\027\110\001\002\000" +
    "\004\011\u012f\001\002\000\006\013\uffcd\014\uffcd\001\002" +
    "\000\006\017\115\026\217\001\002\000\004\011\u0134\001" +
    "\002\000\004\011\u0133\001\002\000\006\013\uffce\014\uffce" +
    "\001\002\000\006\013\uffba\014\uffba\001\002\000\006\036" +
    "\222\037\221\001\002\000\004\014\u013b\001\002\000\004" +
    "\014\u0138\001\002\000\004\037\221\001\002\000\004\011" +
    "\u013a\001\002\000\006\013\uff95\014\uff95\001\002\000\004" +
    "\036\222\001\002\000\004\011\u013d\001\002\000\006\013" +
    "\uff96\014\uff96\001\002\000\004\027\110\001\002\000\004" +
    "\011\u0140\001\002\000\006\013\uffb9\014\uffb9\001\002\000" +
    "\006\045\234\046\223\001\002\000\004\014\u0147\001\002" +
    "\000\004\014\u0144\001\002\000\004\045\234\001\002\000" +
    "\004\011\u0146\001\002\000\006\013\uff78\014\uff78\001\002" +
    "\000\004\046\223\001\002\000\004\011\u0149\001\002\000" +
    "\006\013\uff77\014\uff77\001\002\000\006\044\263\046\223" +
    "\001\002\000\004\014\u0150\001\002\000\004\014\u014d\001" +
    "\002\000\004\044\263\001\002\000\004\011\u014f\001\002" +
    "\000\006\013\uff74\014\uff74\001\002\000\004\046\223\001" +
    "\002\000\004\011\u0152\001\002\000\006\013\uff73\014\uff73" +
    "\001\002\000\006\027\110\030\134\001\002\000\004\014" +
    "\u015a\001\002\000\006\011\u0157\014\u0156\001\002\000\004" +
    "\030\134\001\002\000\006\013\uffda\014\uffda\001\002\000" +
    "\004\011\u0159\001\002\000\006\013\uffd2\014\uffd2\001\002" +
    "\000\004\027\110\001\002\000\004\011\u015c\001\002\000" +
    "\006\013\uffd1\014\uffd1\001\002\000\010\030\134\037\221" +
    "\040\237\001\002\000\004\014\u0174\001\002\000\004\014" +
    "\u016b\001\002\000\006\011\u0162\014\u0161\001\002\000\006" +
    "\030\134\040\237\001\002\000\006\013\uffb2\014\uffb2\001" +
    "\002\000\004\014\u0168\001\002\000\004\014\u0165\001\002" +
    "\000\004\030\134\001\002\000\004\011\u0167\001\002\000" +
    "\006\013\uffaa\014\uffaa\001\002\000\004\040\237\001\002" +
    "\000\004\011\u016a\001\002\000\006\013\uffa9\014\uffa9\001" +
    "\002\000\006\030\134\037\221\001\002\000\004\014\u0171" +
    "\001\002\000\004\014\u016e\001\002\000\004\030\134\001" +
    "\002\000\004\011\u0170\001\002\000\006\013\uffa8\014\uffa8" +
    "\001\002\000\004\037\221\001\002\000\004\011\u0173\001" +
    "\002\000\006\013\uffa7\014\uffa7\001\002\000\006\037\221" +
    "\040\237\001\002\000\004\014\u017a\001\002\000\004\014" +
    "\u0177\001\002\000\004\040\237\001\002\000\004\011\u0179" +
    "\001\002\000\006\013\uffa5\014\uffa5\001\002\000\004\037" +
    "\221\001\002\000\004\011\u017c\001\002\000\006\013\uffa6" +
    "\014\uffa6\001\002\000\010\017\115\026\217\030\134\001" +
    "\002\000\004\014\u0189\001\002\000\006\011\u0186\014\u0185" +
    "\001\002\000\006\011\u0182\014\u0181\001\002\000\004\030" +
    "\134\001\002\000\006\013\uffd9\014\uffd9\001\002\000\004" +
    "\011\u0184\001\002\000\006\013\uffd0\014\uffd0\001\002\000" +
    "\004\030\134\001\002\000\006\013\uffc7\014\uffc7\001\002" +
    "\000\004\011\u0188\001\002\000\006\013\uffbc\014\uffbc\001" +
    "\002\000\006\017\115\026\217\001\002\000\004\011\u018d" +
    "\001\002\000\004\011\u018c\001\002\000\006\013\uffcf\014" +
    "\uffcf\001\002\000\006\013\uffbb\014\uffbb\001\002\000\010" +
    "\030\134\036\222\037\221\001\002\000\004\014\u01a4\001" +
    "\002\000\004\014\u019b\001\002\000\004\014\u0192\001\002" +
    "\000\006\030\134\037\221\001\002\000\004\014\u0198\001" +
    "\002\000\004\014\u0195\001\002\000\004\030\134\001\002" +
    "\000\004\011\u0197\001\002\000\006\013\uff9c\014\uff9c\001" +
    "\002\000\004\037\221\001\002\000\004\011\u019a\001\002" +
    "\000\006\013\uff9b\014\uff9b\001\002\000\006\030\134\036" +
    "\222\001\002\000\004\014\u01a1\001\002\000\004\014\u019e" +
    "\001\002\000\004\030\134\001\002\000\004\011\u01a0\001" +
    "\002\000\006\013\uff9e\014\uff9e\001\002\000\004\036\222" +
    "\001\002\000\004\011\u01a3\001\002\000\006\013\uff9d\014" +
    "\uff9d\001\002\000\006\036\222\037\221\001\002\000\004" +
    "\014\u01aa\001\002\000\004\014\u01a7\001\002\000\004\037" +
    "\221\001\002\000\004\011\u01a9\001\002\000\006\013\uff9a" +
    "\014\uff9a\001\002\000\004\036\222\001\002\000\004\011" +
    "\u01ac\001\002\000\006\013\uff99\014\uff99\001\002\000\006" +
    "\027\110\030\134\001\002\000\004\014\u01b4\001\002\000" +
    "\006\011\u01b1\014\u01b0\001\002\000\004\030\134\001\002" +
    "\000\006\013\uffc8\014\uffc8\001\002\000\004\011\u01b3\001" +
    "\002\000\006\013\uffbe\014\uffbe\001\002\000\004\027\110" +
    "\001\002\000\004\011\u01b6\001\002\000\006\013\uffbd\014" +
    "\uffbd\001\002\000\010\030\134\045\234\046\223\001\002" +
    "\000\004\014\u01cd\001\002\000\004\014\u01c4\001\002\000" +
    "\004\014\u01bb\001\002\000\006\030\134\045\234\001\002" +
    "\000\004\014\u01c1\001\002\000\004\014\u01be\001\002\000" +
    "\004\045\234\001\002\000\004\011\u01c0\001\002\000\006" +
    "\013\uff7e\014\uff7e\001\002\000\004\030\134\001\002\000" +
    "\004\011\u01c3\001\002\000\006\013\uff7d\014\uff7d\001\002" +
    "\000\006\045\234\046\223\001\002\000\004\014\u01ca\001" +
    "\002\000\004\014\u01c7\001\002\000\004\045\234\001\002" +
    "\000\004\011\u01c9\001\002\000\006\013\uff7c\014\uff7c\001" +
    "\002\000\004\046\223\001\002\000\004\011\u01cc\001\002" +
    "\000\006\013\uff7b\014\uff7b\001\002\000\006\030\134\046" +
    "\223\001\002\000\004\014\u01d3\001\002\000\004\014\u01d0" +
    "\001\002\000\004\030\134\001\002\000\004\011\u01d2\001" +
    "\002\000\006\013\uff79\014\uff79\001\002\000\004\046\223" +
    "\001\002\000\004\011\u01d5\001\002\000\006\013\uff7a\014" +
    "\uff7a\001\002\000\006\011\uff58\014\uff58\001\002\000\006" +
    "\011\uff50\014\uff50\001\002\000\006\011\uff4f\014\uff4f\001" +
    "\002\000\010\030\134\044\263\046\223\001\002\000\004" +
    "\014\u01ef\001\002\000\004\014\u01e6\001\002\000\004\014" +
    "\u01dd\001\002\000\006\030\134\046\223\001\002\000\004" +
    "\014\u01e3\001\002\000\004\014\u01e0\001\002\000\004\030" +
    "\134\001\002\000\004\011\u01e2\001\002\000\006\013\uff71" +
    "\014\uff71\001\002\000\004\046\223\001\002\000\004\011" +
    "\u01e5\001\002\000\006\013\uff72\014\uff72\001\002\000\006" +
    "\030\134\044\263\001\002\000\004\014\u01ec\001\002\000" +
    "\004\014\u01e9\001\002\000\004\030\134\001\002\000\004" +
    "\011\u01eb\001\002\000\006\013\uff6d\014\uff6d\001\002\000" +
    "\004\044\263\001\002\000\004\011\u01ee\001\002\000\006" +
    "\013\uff6e\014\uff6e\001\002\000\006\044\263\046\223\001" +
    "\002\000\004\014\u01f5\001\002\000\004\014\u01f2\001\002" +
    "\000\004\044\263\001\002\000\004\011\u01f4\001\002\000" +
    "\006\013\uff6f\014\uff6f\001\002\000\004\046\223\001\002" +
    "\000\004\011\u01f7\001\002\000\006\013\uff70\014\uff70\001" +
    "\002\000\006\011\uff5c\014\uff5c\001\002\000\004\010\uff86" +
    "\001\002\000\004\010\uffd4\001\002\000\006\013\uffc9\014" +
    "\u0203\001\002\000\006\017\115\027\110\001\002\000\004" +
    "\014\u0201\001\002\000\004\014\u01ff\001\002\000\004\017" +
    "\115\001\002\000\004\011\u0186\001\002\000\004\027\110" +
    "\001\002\000\004\011\u01b1\001\002\000\004\010\uffc5\001" +
    "\002\000\004\014\uff89\001\002\000\004\014\uffaf\001\002" +
    "\000\004\011\uffb7\001\002\000\006\013\uffad\014\u0211\001" +
    "\002\000\012\030\134\036\222\037\221\040\237\001\002" +
    "\000\004\014\u0210\001\002\000\004\014\u020e\001\002\000" +
    "\004\014\u020c\001\002\000\010\030\134\037\221\040\237" +
    "\001\002\000\004\014\u0161\001\002\000\010\030\134\036" +
    "\222\040\237\001\002\000\004\014\327\001\002\000\010" +
    "\036\222\037\221\040\237\001\002\000\004\010\uffab\001" +
    "\002\000\004\010\uffc0\001\002\000\004\010\uff8e\001\002" +
    "\000\004\014\uff91\001\002\000\004\014\uffc3\001\002\000" +
    "\004\011\uffcb\001\002\000\004\010\uffb4\001\002\000\004" +
    "\014\uffd7\001\002\000\004\010\uffdc\001\002\000\012\030" +
    "\134\044\263\045\234\046\223\001\002\000\006\013\uff87" +
    "\014\u021c\001\002\000\004\010\uff85\001\002\000\004\014" +
    "\u0220\001\002\000\004\014\u021f\001\002\000\010\030\134" +
    "\044\263\045\234\001\002\000\010\044\263\045\234\046" +
    "\223\001\002\000\010\026\217\027\110\030\134\001\002" +
    "\000\006\013\uffd5\014\u0223\001\002\000\004\010\uffd3\001" +
    "\002\000\004\014\u022d\001\002\000\004\014\u022b\001\002" +
    "\000\004\014\u0227\001\002\000\006\026\217\030\134\001" +
    "\002\000\004\014\u022a\001\002\000\004\014\u0181\001\002" +
    "\000\004\026\217\001\002\000\006\027\110\030\134\001" +
    "\002\000\004\014\u0156\001\002\000\006\026\217\027\110" +
    "\001\002\000\004\014\u022f\001\002\000\004\026\217\001" +
    "\002\000\006\013\uffc1\014\u023e\001\002\000\010\017\115" +
    "\027\110\030\134\001\002\000\004\014\u023b\001\002\000" +
    "\004\014\u0239\001\002\000\004\014\u0235\001\002\000\006" +
    "\017\115\030\134\001\002\000\004\014\u0238\001\002\000" +
    "\004\014\u0185\001\002\000\004\017\115\001\002\000\006" +
    "\027\110\030\134\001\002\000\004\014\u01b0\001\002\000" +
    "\006\017\115\027\110\001\002\000\004\014\u023d\001\002" +
    "\000\004\017\115\001\002\000\004\010\uffbf\001\002\000" +
    "\006\013\uff8f\014\u0245\001\002\000\006\044\u0242\046\223" +
    "\001\002\000\004\014\u0244\001\002\000\004\012\u0243\001" +
    "\002\000\004\010\u0101\001\002\000\004\044\u0242\001\002" +
    "\000\004\010\uff8d\001\002\000\004\011\uffdf\001\002\000" +
    "\004\010\uffc6\001\002\000\006\013\uffb5\014\u0250\001\002" +
    "\000\006\036\222\037\221\001\002\000\004\014\u024e\001" +
    "\002\000\004\014\u024c\001\002\000\004\037\221\001\002" +
    "\000\004\011\u0162\001\002\000\004\036\222\001\002\000" +
    "\004\011\330\001\002\000\004\010\uffb3\001\002\000\006" +
    "\026\217\027\110\001\002\000\006\013\uffdd\014\u0253\001" +
    "\002\000\004\010\uffdb\001\002\000\004\014\u0258\001\002" +
    "\000\004\014\u0256\001\002\000\004\026\217\001\002\000" +
    "\004\011\u0182\001\002\000\004\027\110\001\002\000\004" +
    "\011\u0157\001\002\000\004\016\063\001\002\000\004\011" +
    "\u025c\001\002\000\030\003\uff92\010\uff92\011\uff92\020\uff92" +
    "\021\uff92\023\uff92\024\uff92\025\uff92\041\uff92\042\uff92\043" +
    "\uff92\001\002\000\004\016\u025f\001\002\000\004\011\u0267" +
    "\001\002\000\004\010\u0260\001\002\000\004\020\015\001" +
    "\002\000\004\014\u0262\001\002\000\004\035\u0264\001\002" +
    "\000\004\011\u0266\001\002\000\004\004\u0265\001\002\000" +
    "\004\011\uff51\001\002\000\004\011\uff4c\001\002\000\030" +
    "\003\uffc4\010\uffc4\011\uffc4\020\uffc4\021\uffc4\023\uffc4\024" +
    "\uffc4\025\uffc4\041\uffc4\042\uffc4\043\uffc4\001\002\000\030" +
    "\003\uffe0\010\uffe0\011\uffe0\020\uffe0\021\uffe0\023\uffe0\024" +
    "\uffe0\025\uffe0\041\uffe0\042\uffe0\043\uffe0\001\002\000\004" +
    "\016\063\001\002\000\004\011\u026b\001\002\000\030\003" +
    "\uffd8\010\uffd8\011\uffd8\020\uffd8\021\uffd8\023\uffd8\024\uffd8" +
    "\025\uffd8\041\uffd8\042\uffd8\043\uffd8\001\002\000\012\003" +
    "\uff5f\010\uff5f\011\uff5f\014\uff5f\001\002\000\006\004\u0270" +
    "\013\uff4a\001\002\000\004\004\u0273\001\002\000\004\013" +
    "\u0272\001\002\000\006\013\uff49\014\u0271\001\002\000\004" +
    "\004\uff47\001\002\000\012\003\uff4b\010\uff4b\011\uff4b\014" +
    "\uff4b\001\002\000\006\013\uff48\014\u0274\001\002\000\004" +
    "\004\uff46\001\002\000\004\002\000\001\002\000\030\003" +
    "\uffe1\010\uffe1\011\uffe1\020\uffe1\021\uffe1\023\uffe1\024\uffe1" +
    "\025\uffe1\041\uffe1\042\uffe1\043\uffe1\001\002\000\010\003" +
    "\034\010\045\011\ufffe\001\002\000\030\003\uffec\010\uffec" +
    "\011\uffec\020\uffec\021\uffec\023\uffec\024\uffec\025\uffec\041" +
    "\uffec\042\uffec\043\uffec\001\002\000\010\003\ufffb\010\ufffb" +
    "\011\ufffb\001\002\000\026\003\034\010\045\020\015\021" +
    "\024\023\042\024\014\025\016\041\013\042\006\043\037" +
    "\001\002\000\010\003\ufffa\010\ufffa\011\ufffa\001\002\000" +
    "\012\003\uff62\010\uff62\011\uff62\014\uff62\001\002\000\012" +
    "\003\ufff8\010\ufff8\011\ufff8\014\u027e\001\002\000\022\020" +
    "\ufff6\021\ufff6\023\ufff6\024\ufff6\025\ufff6\041\ufff6\042\ufff6" +
    "\043\ufff6\001\002\000\024\011\uffff\020\015\021\024\023" +
    "\042\024\014\025\016\041\013\042\006\043\037\001\002" +
    "\000\030\003\034\010\045\011\ufffd\020\ufffd\021\ufffd\023" +
    "\ufffd\024\ufffd\025\ufffd\041\ufffd\042\ufffd\043\ufffd\001\002" +
    "\000\006\003\034\010\045\001\002\000\030\003\034\010" +
    "\045\011\ufffc\020\ufffc\021\ufffc\023\ufffc\024\ufffc\025\ufffc" +
    "\041\ufffc\042\ufffc\043\ufffc\001\002\000\022\020\ufff7\021" +
    "\ufff7\023\ufff7\024\ufff7\025\ufff7\041\ufff7\042\ufff7\043\ufff7" +
    "\001\002\000\012\003\uff5d\010\uff5d\011\uff5d\014\uff5d\001" +
    "\002\000\012\003\uff63\010\uff63\011\uff63\014\uff63\001\002" +
    "\000\012\003\uff5e\010\uff5e\011\uff5e\014\uff5e\001\002\000" +
    "\004\020\015\001\002\000\004\011\u0289\001\002\000\012" +
    "\003\uff61\010\uff61\011\uff61\014\uff61\001\002\000\004\022" +
    "\u028b\001\002\000\004\004\u028e\001\002\000\004\011\u028d" +
    "\001\002\000\012\003\uff60\010\uff60\011\uff60\014\uff60\001" +
    "\002\000\004\011\uff54\001\002\000\004\002\001\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u028d\000\004\002\003\001\001\000\002\001\001\000" +
    "\062\003\034\006\046\007\035\010\040\011\032\012\021" +
    "\013\031\014\011\015\017\016\020\017\022\020\016\021" +
    "\027\022\025\027\026\034\045\041\010\050\042\055\030" +
    "\062\043\067\006\074\037\076\007\117\024\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\004\u027e\020\016\021\u027f\022" +
    "\025\027\026\034\045\041\010\050\042\055\030\062\043" +
    "\067\006\074\037\076\007\001\001\000\002\001\001\000" +
    "\024\006\046\007\035\010\040\011\032\012\021\013\031" +
    "\014\011\015\u027c\117\024\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\060" +
    "\005\u0276\006\046\007\035\010\040\011\032\012\021\013" +
    "\031\014\011\015\017\016\u0278\017\022\020\u0277\022\025" +
    "\027\026\034\045\041\010\050\042\055\030\062\043\067" +
    "\006\074\037\076\007\117\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\022\024\050\031\047\036\054" +
    "\043\051\052\055\057\057\064\052\071\056\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\061\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\006\064\001\001\000\002" +
    "\001\001\000\004\102\066\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\103\072\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\047\100\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\062\023\174\025\167\026\164\030\211" +
    "\032\175\033\172\035\166\037\177\040\210\042\203\044" +
    "\200\045\171\051\176\053\205\054\165\056\214\060\206" +
    "\061\204\063\202\065\201\066\170\070\212\072\207\073" +
    "\173\001\001\000\014\007\112\075\111\077\106\101\113" +
    "\112\110\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\007" +
    "\120\112\117\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\112\122\001\001\000\002\001\001\000\004\007" +
    "\124\001\001\000\002\001\001\000\004\113\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\104\132\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\114\136\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\101\143" +
    "\112\142\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\112\145\001\001\000\002\001\001\000\004\101\147" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\007\153\101\154\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\156\001\001\000\002\001" +
    "\001\000\004\101\160\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\u0251\001\001\000\004\051\u0247\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\063\u023e\001\001\000\004\042" +
    "\u022f\001\001\000\004\030\u0221\001\001\000\004\070\u021a" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\056\u0206\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\035\u01fa\001\001\000\002\001\001\000\002\001" +
    "\001\000\030\100\230\101\226\104\231\106\227\107\235" +
    "\110\237\111\225\112\224\116\217\123\234\127\223\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\104\242\116\241\123\244\127\243" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\104\250" +
    "\116\247\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\116\252\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\104\255\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\116\260\127\261\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\126\267\130" +
    "\265\131\264\001\001\000\004\126\300\001\001\000\002" +
    "\001\001\000\004\106\271\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\107\273\001\001" +
    "\000\002\001\001\000\004\112\275\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\116\303\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\127\306\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\104\311\127\312\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\104\314" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\127" +
    "\317\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\104\323\106\325\111\324\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\104\330\111\331\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\104\333\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\111\336\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\104\341\106\342" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\104" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\106\347\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\106\353\111\352\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\111\355\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\106\360\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\110\363\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\122\372" +
    "\124\367\125\370\126\267\130\265\131\264\001\001\000" +
    "\002\001\001\000\004\122\u0101\001\001\000\004\106\374" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\107\376\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\106\u0103\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\107\u0105\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\100\u010d\101" +
    "\u010c\106\u010e\107\u010f\110\u0110\111\u010b\112\u010a\116\u0108" +
    "\127\u0109\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\116\u0112\127\u0113\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\116\u0115\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\127\u0118\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\106\u011c\111\u011b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\111\u011e" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\106" +
    "\u0121\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\107\u0125\111\u0124\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\111\u0127\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\107\u012a\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\101\u012d\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\100\u0131\112\u0130\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\106\u0136\107\u0135\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\107\u0138\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\106\u013b\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\u013e\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\110\u0142\116" +
    "\u0141\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\116\u0144\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\110\u0147\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\110\u014b\127\u014a\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\127\u014d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\110\u0150\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\101\u0154\104\u0153\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\104\u0157\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\101\u015a\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\104\u015d\107\u015f\111\u015e\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\104" +
    "\u0162\111\u0163\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\104\u0165\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\111\u0168\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\104\u016b\107\u016c\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\104\u016e" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\107" +
    "\u0171\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\107\u0175\111\u0174\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\111\u0177\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\107\u017a\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\100\u017f\104\u017d\112\u017e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\104\u0182\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\104\u0186\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\100\u018a" +
    "\112\u0189\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\104\u018e\106\u0190" +
    "\107\u018f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\104\u0192\107\u0193\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\104\u0195\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\107\u0198\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\104\u019b\106" +
    "\u019c\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\104\u019e\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\106\u01a1\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\106\u01a5\107\u01a4\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\107\u01a7\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\106\u01aa\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\101\u01ae\104\u01ad\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\104\u01b1\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\101\u01b4\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\104\u01b8\110\u01b9\116\u01b7\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\104" +
    "\u01bc\116\u01bb\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\116\u01be\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\104\u01c1\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\110\u01c5\116\u01c4\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\116\u01c7\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\110\u01ca\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\104\u01cd\110\u01ce" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\104" +
    "\u01d0\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\110\u01d3\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\104\u01d9\110\u01da\127\u01db\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\104\u01dd\110\u01de" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\104" +
    "\u01e0\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\110\u01e3\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\104\u01e6\127\u01e7\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\104\u01e9\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\127\u01ec\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\110\u01f0\127\u01ef\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\127\u01f2\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\110\u01f5\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\101\u01fd\112\u01fc\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\112\u01ff\001\001\000\002\001\001\000" +
    "\004\101\u0201\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\104\u0208\106\u020a\107\u0209\111\225" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\104\u015d\107\u020c\111\u015e\001\001\000\002" +
    "\001\001\000\010\104\323\106\u020e\111\324\001\001\000" +
    "\002\001\001\000\010\106\u010e\107\u010f\111\u010b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\104" +
    "\u021c\110\u021d\116\217\127\223\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\104\242\116\241\127\243\001\001\000\010\110\u0110" +
    "\116\u0108\127\u0109\001\001\000\010\100\u0224\101\u0225\104" +
    "\u0223\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\100" +
    "\u0228\104\u0227\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\100\u018a\001\001\000\006\101\u022b\104\u0153\001" +
    "\001\000\002\001\001\000\006\100\u010d\101\u022d\001\001" +
    "\000\002\001\001\000\004\100\u0131\001\001\000\002\001" +
    "\001\000\010\101\u0233\104\u0231\112\u0232\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\104" +
    "\u0235\112\u0236\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\112\u0189\001\001\000\006\101\u0239\104\u01ad\001" +
    "\001\000\002\001\001\000\006\101\u023b\112\u010a\001\001" +
    "\000\002\001\001\000\004\112\u0130\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\110\u0240\123\234\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\122\372\124" +
    "\367\125\370\001\001\000\004\123\244\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\106\u024a\107\u0249\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\107\u024c\001\001\000\002\001" +
    "\001\000\004\106\u024e\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\100\u0253\101\u0254\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\100\u0256\001\001\000\002\001\001\000\004\101" +
    "\u0258\001\001\000\002\001\001\000\004\047\u025a\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\046\u025d\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\u0260" +
    "\001\001\000\002\001\001\000\004\105\u0262\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\047" +
    "\u0269\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\120\u026e\121\u026d\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\020\016\021\u0279" +
    "\022\025\027\026\034\045\041\010\050\042\055\030\062" +
    "\043\067\006\074\037\076\007\001\001\000\002\001\001" +
    "\000\002\001\001\000\056\006\046\007\035\010\040\011" +
    "\032\012\021\013\031\014\011\015\017\016\u027a\017\022" +
    "\020\u0277\022\025\027\026\034\045\041\010\050\042\055" +
    "\030\062\043\067\006\074\037\076\007\117\024\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\006\046\007\035\010\040\011\032" +
    "\012\021\013\031\014\011\015\017\016\u0280\017\022\117" +
    "\024\001\001\000\030\020\u0277\022\025\027\026\034\045" +
    "\041\010\050\042\055\030\062\043\067\006\074\037\076" +
    "\007\001\001\000\032\020\016\021\u0281\022\025\027\026" +
    "\034\045\041\010\050\042\055\030\062\043\067\006\074" +
    "\037\076\007\001\001\000\030\020\u0277\022\025\027\026" +
    "\034\045\041\010\050\042\055\030\062\043\067\006\074" +
    "\037\076\007\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u0287\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\115\u028b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserDashb$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserDashb$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserDashb$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserDashb$actions {


    private void print(String texto){ System.out.print(texto); } 

  private final ParserDashb parser;

  /** Constructor */
  CUP$ParserDashb$actions(ParserDashb parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserDashb$do_action_part00000000(
    int                        CUP$ParserDashb$act_num,
    java_cup.runtime.lr_parser CUP$ParserDashb$parser,
    java.util.Stack            CUP$ParserDashb$stack,
    int                        CUP$ParserDashb$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserDashb$result;

      /* select the action based on the action number */
      switch (CUP$ParserDashb$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= dashboard EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> start_val = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		RESULT = start_val;
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserDashb$parser.done_parsing();
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // dashboard ::= IZQLLAVE content DERLLAVE 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("dashboard",0, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // content ::= properties content2 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_PROPERTY,w1)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // content ::= graficos content3 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w2.add(new Par(Index.SD_GRAFICOS,w1)); RESULT=w2; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content",1, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // content2 ::= graficos 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(new Par(Index.SD_GRAFICOS,w1)); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content2",2, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // content2 ::= content2 properties graficos 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w2 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Object> w3 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(new Par(Index.SD_PROPERTY,w2)); w1.add(new Par(Index.SD_GRAFICOS,w3)); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content2",2, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // content3 ::= properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(new Par(Index.SD_PROPERTY,w1)); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content3",3, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // content3 ::= content3 graficos properties 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w2 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<Par> w3 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(new Par(Index.SD_GRAFICOS,w2)); w1.add(new Par(Index.SD_PROPERTY,w3)); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("content3",3, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // properties ::= property 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Par w1 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",12, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // properties ::= propertyList property 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Par w2 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("properties",12, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // propertyList ::= property COMA 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Par w1 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Par> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("propertyList",13, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // propertyList ::= propertyList property COMA 
            {
              ArrayList<Par> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Par> w1 = (ArrayList<Par>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Par w2 = (Par)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("propertyList",13, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // property ::= title 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_TITLE,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // property ::= description 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_DESCRIP,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // property ::= keywords 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_KEYWORDS,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // property ::= header 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_HEADER,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // property ::= footer 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FOOTER,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // property ::= backgr 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_BACKGR,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // property ::= fontFam 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FONTFAM,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // property ::= fontSize 
            {
              Par RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Par(Index.KD_FONTSIZE,w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("property",11, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // graficos ::= grafico 
            {
              ArrayList<Object> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w1 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Object> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("graficos",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // graficos ::= graficos grafico 
            {
              ArrayList<Object> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Object> w1 = (ArrayList<Object>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Object w2 = (Object)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("graficos",15, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // grafico ::= barras 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras w1 = (Barras)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // grafico ::= barrasXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt w1 = (BarrasXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // grafico ::= pastel 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel w1 = (Pastel)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // grafico ::= pastelXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt w1 = (PastelXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // grafico ::= puntos 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos w1 = (Puntos)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // grafico ::= puntosXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt w1 = (PuntosXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // grafico ::= lineas 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas w1 = (Lineas)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // grafico ::= lineasXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt w1 = (LineasXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // grafico ::= tarjeta 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Tarjeta w1 = (Tarjeta)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // grafico ::= tarjetaXt 
            {
              Object RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		TarjetaXt w1 = (TarjetaXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // grafico ::= error DERLLAVE 
            {
              Object RESULT =null;
		 RESULT=null; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("grafico",14, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // barras ::= IZQLLAVE barrasData DERLLAVE 
            {
              Barras RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barras",16, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // barrasData ::= KD_DATA IZQCORCH barrasDataList DERCORCH 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasData",18, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // barrasDataList ::= barrasDataValue 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras.Data w1 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Barras.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList",19, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // barrasDataList ::= barrasDataList2 barrasDataValue 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Barras.Data w2 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList",19, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // barrasDataList2 ::= barrasDataValue COMA 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Barras.Data w1 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Barras.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList2",20, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // barrasDataList2 ::= barrasDataList2 barrasDataValue COMA 
            {
              ArrayList<Barras.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Barras.Data> w1 = (ArrayList<Barras.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Barras.Data w2 = (Barras.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataList2",20, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // barrasDataValue ::= IZQLLAVE category COMA value DERLLAVE 
            {
              Barras.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataValue",17, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // barrasDataValue ::= IZQLLAVE value COMA category DERLLAVE 
            {
              Barras.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Barras.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasDataValue",17, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // barrasXt ::= IZQLLAVE barrasXtData COMA chart DERLLAVE 
            {
              BarrasXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXt",21, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // barrasXtData ::= KD_DATA IZQCORCH barrasXtDataList DERCORCH 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtData",23, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // barrasXtDataList ::= barrasXtDataValue 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt.Data w1 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<BarrasXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList",24, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // barrasXtDataList ::= barrasXtDataList2 barrasXtDataValue 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		BarrasXt.Data w2 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList",24, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // barrasXtDataList2 ::= barrasXtDataValue COMA 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		BarrasXt.Data w1 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<BarrasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList2",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // barrasXtDataList2 ::= barrasXtDataList2 barrasXtDataValue COMA 
            {
              ArrayList<BarrasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<BarrasXt.Data> w1 = (ArrayList<BarrasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		BarrasXt.Data w2 = (BarrasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataList2",25, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // barrasXtDataValue ::= IZQLLAVE category COMA value COMA color DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // barrasXtDataValue ::= IZQLLAVE category COMA color COMA value DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // barrasXtDataValue ::= IZQLLAVE value COMA category COMA color DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // barrasXtDataValue ::= IZQLLAVE value COMA color COMA category DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // barrasXtDataValue ::= IZQLLAVE color COMA value COMA category DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // barrasXtDataValue ::= IZQLLAVE color COMA category COMA value DERLLAVE 
            {
              BarrasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new BarrasXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("barrasXtDataValue",22, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // pastel ::= IZQLLAVE pastelData DERLLAVE 
            {
              Pastel RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastel",26, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // pastelData ::= KD_DATA IZQCORCH pastelDataList DERCORCH 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelData",28, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // pastelDataList ::= pastelDataValue 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel.Data w1 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Pastel.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList",29, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // pastelDataList ::= pastelDataList2 pastelDataValue 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Pastel.Data w2 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList",29, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // pastelDataValue ::= IZQLLAVE label COMA value DERLLAVE 
            {
              Pastel.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataValue",27, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // pastelDataValue ::= IZQLLAVE value COMA label DERLLAVE 
            {
              Pastel.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Pastel.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataValue",27, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // pastelDataList2 ::= pastelDataValue COMA 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Pastel.Data w1 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Pastel.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList2",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // pastelDataList2 ::= pastelDataList2 pastelDataValue COMA 
            {
              ArrayList<Pastel.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Pastel.Data> w1 = (ArrayList<Pastel.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Pastel.Data w2 = (Pastel.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelDataList2",30, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // pastelXt ::= IZQLLAVE pastelXtData COMA pastelXtChart DERLLAVE 
            {
              PastelXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart2 w2 = (Chart2)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXt",31, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // pastelXtData ::= KD_DATA IZQCORCH pastelXtDataList DERCORCH 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtData",33, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // pastelXtDataList ::= pastelXtDataValue 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt.Data w1 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<PastelXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList",34, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // pastelXtDataList ::= pastelXtDataList2 pastelXtDataValue 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PastelXt.Data w2 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList",34, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // pastelXtDataList2 ::= pastelXtDataValue COMA 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PastelXt.Data w1 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<PastelXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList2",35, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // pastelXtDataList2 ::= pastelXtDataList2 pastelXtDataValue COMA 
            {
              ArrayList<PastelXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<PastelXt.Data> w1 = (ArrayList<PastelXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PastelXt.Data w2 = (PastelXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataList2",35, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // pastelXtDataValue ::= IZQLLAVE label COMA value COMA color DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // pastelXtDataValue ::= IZQLLAVE label COMA color COMA value DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // pastelXtDataValue ::= IZQLLAVE value COMA label COMA color DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // pastelXtDataValue ::= IZQLLAVE value COMA color COMA label DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // pastelXtDataValue ::= IZQLLAVE color COMA value COMA label DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // pastelXtDataValue ::= IZQLLAVE color COMA label COMA value DERLLAVE 
            {
              PastelXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PastelXt.Data(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtDataValue",32, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // puntos ::= IZQLLAVE puntosData DERLLAVE 
            {
              Puntos RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos(w1); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntos",38, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // puntosData ::= KD_DATA IZQCORCH puntosDataList DERCORCH 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosData",40, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // puntosDataList ::= puntosDataValue 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos.Data w1 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Puntos.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList",41, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // puntosDataList ::= puntosDataList2 puntosDataValue 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Puntos.Data w2 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList",41, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // puntosDataList2 ::= puntosDataValue COMA 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Puntos.Data w1 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Puntos.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList2",42, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // puntosDataList2 ::= puntosDataList2 puntosDataValue COMA 
            {
              ArrayList<Puntos.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Puntos.Data> w1 = (ArrayList<Puntos.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Puntos.Data w2 = (Puntos.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataList2",42, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // puntosDataValue ::= IZQLLAVE xValue COMA yValue DERLLAVE 
            {
              Puntos.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataValue",39, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // puntosDataValue ::= IZQLLAVE yValue COMA xValue DERLLAVE 
            {
              Puntos.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Puntos.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosDataValue",39, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // puntosXt ::= IZQLLAVE puntosXtData COMA chart DERLLAVE 
            {
              PuntosXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXt",43, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // puntosXtData ::= KD_DATA IZQCORCH puntosXtDataList DERCORCH 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtData",45, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // puntosXtDataList ::= puntosXtDataValue 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt.Data w1 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<PuntosXt.Data> list= new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList",46, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // puntosXtDataList ::= puntosXtDataList2 puntosXtDataValue 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		PuntosXt.Data w2 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList",46, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // puntosXtDataList2 ::= puntosXtDataValue COMA 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PuntosXt.Data w1 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<PuntosXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList2",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // puntosXtDataList2 ::= puntosXtDataList2 puntosXtDataValue COMA 
            {
              ArrayList<PuntosXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<PuntosXt.Data> w1 = (ArrayList<PuntosXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		PuntosXt.Data w2 = (PuntosXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataList2",47, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // puntosXtDataValue ::= IZQLLAVE xValue COMA yValue COMA size COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // puntosXtDataValue ::= IZQLLAVE xValue COMA yValue COMA color COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // puntosXtDataValue ::= IZQLLAVE xValue COMA size COMA yValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // puntosXtDataValue ::= IZQLLAVE xValue COMA size COMA color COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // puntosXtDataValue ::= IZQLLAVE xValue COMA color COMA size COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // puntosXtDataValue ::= IZQLLAVE xValue COMA color COMA yValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // puntosXtDataValue ::= IZQLLAVE yValue COMA xValue COMA size COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // puntosXtDataValue ::= IZQLLAVE yValue COMA xValue COMA color COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // puntosXtDataValue ::= IZQLLAVE yValue COMA size COMA xValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // puntosXtDataValue ::= IZQLLAVE yValue COMA size COMA color COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // puntosXtDataValue ::= IZQLLAVE yValue COMA color COMA size COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // puntosXtDataValue ::= IZQLLAVE yValue COMA color COMA xValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // puntosXtDataValue ::= IZQLLAVE size COMA yValue COMA xValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // puntosXtDataValue ::= IZQLLAVE size COMA yValue COMA color COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // puntosXtDataValue ::= IZQLLAVE size COMA xValue COMA yValue COMA color DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // puntosXtDataValue ::= IZQLLAVE size COMA xValue COMA color COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // puntosXtDataValue ::= IZQLLAVE size COMA color COMA xValue COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // puntosXtDataValue ::= IZQLLAVE size COMA color COMA yValue COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // puntosXtDataValue ::= IZQLLAVE color COMA yValue COMA size COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // puntosXtDataValue ::= IZQLLAVE color COMA yValue COMA xValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // puntosXtDataValue ::= IZQLLAVE color COMA size COMA yValue COMA xValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // puntosXtDataValue ::= IZQLLAVE color COMA size COMA xValue COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // puntosXtDataValue ::= IZQLLAVE color COMA xValue COMA size COMA yValue DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // puntosXtDataValue ::= IZQLLAVE color COMA xValue COMA yValue COMA size DERLLAVE 
            {
              PuntosXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new PuntosXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("puntosXtDataValue",44, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // lineas ::= IZQLLAVE lineasData COMA chart DERLLAVE 
            {
              Lineas RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineas",48, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // lineasData ::= KD_DATA IZQCORCH lineasDataList DERCORCH 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasData",50, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // lineasDataList ::= lineasDataValue 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data w1 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Lineas.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList",51, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // lineasDataList ::= lineasDataList2 lineasDataValue 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data w2 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList",51, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // lineasDataList2 ::= lineasDataValue COMA 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data w1 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Lineas.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList2",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // lineasDataList2 ::= lineasDataList2 lineasDataValue COMA 
            {
              ArrayList<Lineas.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Lineas.Data> w1 = (ArrayList<Lineas.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data w2 = (Lineas.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataList2",52, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // lineasDataValue ::= IZQLLAVE name COMA points DERLLAVE 
            {
              Lineas.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w2 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataValue",49, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // lineasDataValue ::= IZQLLAVE points COMA name DERLLAVE 
            {
              Lineas.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<Lineas.Data.Punto> w2 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasDataValue",49, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // lineasXt ::= IZQLLAVE lineasXtData COMA chart DERLLAVE 
            {
              LineasXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Chart1 w2 = (Chart1)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXt",53, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // lineasXtData ::= KD_DATA IZQCORCH lineasXtDataList DERCORCH 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtData",55, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // lineasXtDataList ::= lineasXtDataValue 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data w1 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<LineasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // lineasXtDataList ::= lineasXtDataList2 lineasXtDataValue 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data w2 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList",56, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // lineasXtDataList2 ::= lineasXtDataValue COMA 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data w1 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<LineasXt.Data> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList2",57, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // lineasXtDataList2 ::= lineasXtDataList2 lineasXtDataValue COMA 
            {
              ArrayList<LineasXt.Data> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<LineasXt.Data> w1 = (ArrayList<LineasXt.Data>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data w2 = (LineasXt.Data)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataList2",57, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // lineasXtDataValue ::= IZQLLAVE name COMA pointsXt COMA color COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // lineasXtDataValue ::= IZQLLAVE name COMA pointsXt COMA lineStyle COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // lineasXtDataValue ::= IZQLLAVE name COMA color COMA pointsXt COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // lineasXtDataValue ::= IZQLLAVE name COMA color COMA lineStyle COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // lineasXtDataValue ::= IZQLLAVE name COMA lineStyle COMA color COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // lineasXtDataValue ::= IZQLLAVE name COMA lineStyle COMA pointsXt COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA name COMA color COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA name COMA lineStyle COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA color COMA name COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA color COMA lineStyle COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA lineStyle COMA color COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // lineasXtDataValue ::= IZQLLAVE pointsXt COMA lineStyle COMA name COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // lineasXtDataValue ::= IZQLLAVE color COMA pointsXt COMA name COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // lineasXtDataValue ::= IZQLLAVE color COMA pointsXt COMA lineStyle COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // lineasXtDataValue ::= IZQLLAVE color COMA name COMA pointsXt COMA lineStyle DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // lineasXtDataValue ::= IZQLLAVE color COMA name COMA lineStyle COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // lineasXtDataValue ::= IZQLLAVE color COMA lineStyle COMA name COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // lineasXtDataValue ::= IZQLLAVE color COMA lineStyle COMA pointsXt COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA pointsXt COMA color COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA pointsXt COMA name COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA color COMA pointsXt COMA name DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA color COMA name COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA name COMA color COMA pointsXt DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // lineasXtDataValue ::= IZQLLAVE lineStyle COMA name COMA pointsXt COMA color DERLLAVE 
            {
              LineasXt.Data RESULT =null;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		ArrayList<LineasXt.Data.Punto> w2 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data(w1,w2,w3,w4); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineasXtDataValue",54, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // tarjeta ::= IZQLLAVE KD_DATA IZQLLAVE tarjetaData DERLLAVE DERLLAVE 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		Tarjeta w1 = (Tarjeta)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjeta",58, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // tarjetaData ::= value COMA label COMA description 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // tarjetaData ::= value COMA description COMA label 
            {
              Tarjeta RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // tarjetaData ::= label COMA value COMA description 
            {
              Tarjeta RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // tarjetaData ::= label COMA description COMA value 
            {
              Tarjeta RESULT =null;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // tarjetaData ::= description COMA label COMA value 
            {
              Tarjeta RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // tarjetaData ::= description COMA value COMA label 
            {
              Tarjeta RESULT =null;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new Tarjeta(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaData",59, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // tarjetaXt ::= IZQLLAVE KD_DATA IZQLLAVE tarjetaXtData DERLLAVE DERLLAVE 
            {
              TarjetaXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		TarjetaXt w1 = (TarjetaXt)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaXt",60, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // tarjetaXtData ::= value COMA label COMA description COMA icon COMA color COMA link 
            {
              TarjetaXt RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-8)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)).value;
		int w4left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).left;
		int w4right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).right;
		String w4 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)).value;
		int w5left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w5right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		String w5 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w6left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w6right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w6 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT= new TarjetaXt(w1,w2,w3,w4,w5,w6); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("tarjetaXtData",61, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-10)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // title ::= KD_TITLE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("title",4, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // description ::= KD_DESCRIP MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("description",5, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // header ::= KD_HEADER IZQLLAVE title DERLLAVE 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("header",6, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // footer ::= KD_FOOTER IZQLLAVE copyright DERLLAVE 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("footer",7, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // backgr ::= KD_BACKGR MI_COLOR 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("backgr",8, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // fontFam ::= KD_FONTFAM MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("fontFam",9, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // fontSize ::= KD_FONTSIZE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("fontSize",10, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // category ::= KD_CATEGORY MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("category",62, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // value ::= KD_VALUE MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("value",63, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // color ::= KD_COLOR MI_COLOR 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("color",66, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // lineStyle ::= KD_LINE MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("lineStyle",76, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // name ::= KD_NAME MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("name",70, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // label ::= KD_LABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("label",72, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // icon ::= KD_ICON MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("icon",73, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // link ::= KD_LINK MI_URL 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("link",74, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // copyright ::= KD_COPYR MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("copyright",75, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // xLabel ::= KD_XLABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("xLabel",64, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // yLabel ::= KD_YLABEL MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("yLabel",65, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // legend ::= KD_LEGEND MI_TEXTO 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("legend",67, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // xValue ::= KD_X MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("xValue",68, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // yValue ::= KD_Y MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("yValue",69, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // size ::= KD_SIZE MI_INTEGER 
            {
              String RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("size",71, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // chart ::= KD_CHART IZQLLAVE title COMA xLabel COMA yLabel DERLLAVE 
            {
              Chart1 RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart1(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("chart",37, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-7)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // pastelXtChart ::= KD_CHART IZQLLAVE title COMA legend DERLLAVE 
            {
              Chart2 RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Chart2(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pastelXtChart",36, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // keywords ::= KD_KEYWORDS IZQCORCH keywordList DERCORCH 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywords",77, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // keywordList ::= 
            {
              ArrayList<String> RESULT =null;
		 ArrayList<String> list = new ArrayList<>(); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",78, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // keywordList ::= MI_TEXTO 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<String> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",78, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // keywordList ::= keywordList2 MI_TEXTO 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList",78, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // keywordList2 ::= MI_TEXTO COMA 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<String> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList2",79, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // keywordList2 ::= keywordList2 MI_TEXTO COMA 
            {
              ArrayList<String> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<String> w1 = (ArrayList<String>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("keywordList2",79, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // points ::= KD_PONTS IZQCORCH pointList DERCORCH 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("points",81, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // pointList ::= pointValue 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data.Punto w1 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<Lineas.Data.Punto> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList",82, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // pointList ::= pointList2 pointValue 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		Lineas.Data.Punto w2 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList",82, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // pointList2 ::= pointValue COMA 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data.Punto w1 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<Lineas.Data.Punto> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList2",83, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // pointList2 ::= pointList2 pointValue COMA 
            {
              ArrayList<Lineas.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<Lineas.Data.Punto> w1 = (ArrayList<Lineas.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		Lineas.Data.Punto w2 = (Lineas.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointList2",83, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // pointValue ::= IZQLLAVE xValue COMA yValue DERLLAVE 
            {
              Lineas.Data.Punto RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new Lineas.Data.Punto(w1,w2); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointValue",80, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-4)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // pointsXt ::= KD_PONTS IZQCORCH pointXtList DERCORCH 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointsXt",85, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // pointXtList ::= pointXtValue 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data.Punto w1 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 ArrayList<LineasXt.Data.Punto> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList",86, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // pointXtList ::= pointXtList2 pointXtValue 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()).right;
		LineasXt.Data.Punto w2 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.peek()).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList",86, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // pointXtList2 ::= pointXtValue COMA 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data.Punto w1 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 ArrayList<LineasXt.Data.Punto> list = new ArrayList<>(); list.add(w1); RESULT=list; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList2",87, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // pointXtList2 ::= pointXtList2 pointXtValue COMA 
            {
              ArrayList<LineasXt.Data.Punto> RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).right;
		ArrayList<LineasXt.Data.Punto> w1 = (ArrayList<LineasXt.Data.Punto>)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		LineasXt.Data.Punto w2 = (LineasXt.Data.Punto)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 w1.add(w2); RESULT=w1; 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtList2",87, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-2)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // pointXtValue ::= IZQLLAVE xValue COMA yValue COMA label DERLLAVE 
            {
              LineasXt.Data.Punto RESULT =null;
		int w1left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).left;
		int w1right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).right;
		String w1 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-5)).value;
		int w2left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).left;
		int w2right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).right;
		String w2 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-3)).value;
		int w3left = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).left;
		int w3right = ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).right;
		String w3 = (String)((java_cup.runtime.Symbol) CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-1)).value;
		 RESULT= new LineasXt.Data.Punto(w1,w2,w3); 
              CUP$ParserDashb$result = parser.getSymbolFactory().newSymbol("pointXtValue",84, ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.elementAt(CUP$ParserDashb$top-6)), ((java_cup.runtime.Symbol)CUP$ParserDashb$stack.peek()), RESULT);
            }
          return CUP$ParserDashb$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserDashb$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserDashb$do_action(
    int                        CUP$ParserDashb$act_num,
    java_cup.runtime.lr_parser CUP$ParserDashb$parser,
    java.util.Stack            CUP$ParserDashb$stack,
    int                        CUP$ParserDashb$top)
    throws java.lang.Exception
    {
              return CUP$ParserDashb$do_action_part00000000(
                               CUP$ParserDashb$act_num,
                               CUP$ParserDashb$parser,
                               CUP$ParserDashb$stack,
                               CUP$ParserDashb$top);
    }
}

}
